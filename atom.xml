<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[zero's a life]]></title>
  <link href="http://zerosalife.github.io/atom.xml" rel="self"/>
  <link href="http://zerosalife.github.io/"/>
  <updated>2014-03-22T09:46:53-05:00</updated>
  <id>http://zerosalife.github.io/</id>
  <author>
    <name><![CDATA[zerosalife]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[ICE ICE Baby]]></title>
    <link href="http://zerosalife.github.io/blog/2014/03/22/ice-ice-baby/"/>
    <updated>2014-03-22T09:17:31-05:00</updated>
    <id>http://zerosalife.github.io/blog/2014/03/22/ice-ice-baby</id>
    <content type="html"><![CDATA[<p><a href="http://www.thegia.com/author/avestal/">Andrew Vestal</a> of <a href="http://www.thegia.com/">the GIA</a> wrote a <a href="http://twinery.org/">Twine</a> game for <a href="http://itch.io/jam/cyberpunk-jam">#cyberpunkjam</a> called <a href="http://www.thegia.com/avestal/iceicebaby.html">ICE ICE Baby</a>.  It&rsquo;s playable in a quick ten minutes.  Parts of the game remind me of the sorts imagination games I would play growing up. This is quite a nice conceit for a text adventure, and it works well here.  I especially like the use of color to mark the transitions between meatspace and cyberspace.</p>

<p><a href="http://www.thegia.com/author/nmaragos/">Nich Maragos</a> wrote more thorough <a href="http://www.thegia.com/2014/03/05/appetite-for-destruction-ice-ice-baby/">critical review</a> on the GIA.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Upgrading to Mavericks]]></title>
    <link href="http://zerosalife.github.io/blog/2014/03/15/upgrading-to-mavericks/"/>
    <updated>2014-03-15T08:03:27-05:00</updated>
    <id>http://zerosalife.github.io/blog/2014/03/15/upgrading-to-mavericks</id>
    <content type="html"><![CDATA[<p>This week I upgraded to <a href="https://www.apple.com/osx/">Mac OS X 10.9 Mavericks</a>.  To keep <a href="http://octopress.org/">octopress</a> working, I had to uninstall and reinstall <a href="https://www.ruby-lang.org/">Ruby</a>.</p>

<p>Upon trying a <code>rake generate</code> task, I saw errors in the Ruby gems for processing <a href="http://www.yaml.org/">YAML</a>.  I assume this is due to the fact that I built them on the older OS X install.</p>

<p>Interestingly, <a href="https://rvm.io/">RVM</a> survived the upgrade and seems to be working just fine.</p>

<p>I followed the instructions <a href="https://gist.github.com/imathis/1104557">here</a> to uninstall and reinstall Ruby, the bundler, and all bundled gems for my octopress install.  The instructions mention a specific problem for OS X Lion, but these steps solved the problem for me.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Cut it all right in two: bisect to find bugs]]></title>
    <link href="http://zerosalife.github.io/blog/2014/03/08/cut-it-all-right-in-two-bisect-to-find-bugs/"/>
    <updated>2014-03-08T10:25:02-06:00</updated>
    <id>http://zerosalife.github.io/blog/2014/03/08/cut-it-all-right-in-two-bisect-to-find-bugs</id>
    <content type="html"><![CDATA[<p>Imagine there&rsquo;s a lion in a desert.  You need to cage the lion or you
will be eaten.  In this example the desert is your code and the lion
is a bug that you&rsquo;re having a hard time pinning down.</p>

<p>There are many ways to trap a lion.  Here&rsquo;s one.</p>

<p>Build a fence dividing the desert in half going North to South.
Assuming the lion is not in the South section, divide the North
section in half with a fence going East to West.  Repeat the process
until your fence is arbitrarily small and has become a cage trapping
the lion.</p>

<p>But how does this relate to code?</p>

<p>Say you have a relatively large file that executes fine, but
introduces a bug into your larger system.  You suspect that something
has gone wrong with the large file, but you&rsquo;re not getting an error
implicating a specific line.</p>

<p>Cut it all right in two.</p>

<p>Comment out half the code in your large file and try to reproduce the
bug.  If you reproduce the bug, repeat the process as necessary until
you isolate the line producing the problem.</p>

<p>I learned about this approach for bugsleuthing from the <a href="https://gist.github.com/stardiviner/8109774#file-temp-txt-L26">bot in #emacs on freenode</a>.  It&rsquo;s particularly useful for tracking down bugs in large configuration files.  There&rsquo;s a list of humorous lion-trapping algorithm examples <a href="http://faculty.smu.edu/yzhou/humor/lion.htm">here</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[What's in a name?]]></title>
    <link href="http://zerosalife.github.io/blog/2014/03/01/whats-in-a-name/"/>
    <updated>2014-03-01T12:09:41-06:00</updated>
    <id>http://zerosalife.github.io/blog/2014/03/01/whats-in-a-name</id>
    <content type="html"><![CDATA[<p>Growing up, the seemingly interminable school-week gave way to an
anxious car drive home from the rental store with the weekend&rsquo;s score.
You remember those, right?</p>

<p>Usually the rental would include the instruction manual.  On the ride
home, I&rsquo;d pour over the manual, trying to glean useful information to
supplement my Nintendo Power-fueled strategies to maximize my fun in
the limited time I had with the game.  Often I&rsquo;d get so engrossed with
the manual, learning the universe for the game, I&rsquo;d let my brother or
a friend play the game first.</p>

<p>The looming question, not covered in the manual, was always: When will
my turn end?  When will my brother run out of lives, so I can get a
turn?</p>

<p>We developed a vocabulary to deal with the count down to game over. On
your first play-through it was unclear whether the last life was when
your stock counter read 1 or 0.  If you had one life left, you could
play extra hard, using a rush of adrenaline to try to stay alive
longer.</p>

<p>Sometimes, it was game over when the stock counter ticked over from 1
to 0.  In other games, when the stock counter reads 0, zero is a life.</p>

<p>The name of this blog comes from that reassuring sense that you have
an extra chance.  &ldquo;Don&rsquo;t worry, zero&rsquo;s a life.&rdquo;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setting up Emacs-like key bindings in MonoDevelop]]></title>
    <link href="http://zerosalife.github.io/blog/2014/02/22/setting-up-emacs-like-key-bindings-in-monodevelop/"/>
    <updated>2014-02-22T08:14:40-06:00</updated>
    <id>http://zerosalife.github.io/blog/2014/02/22/setting-up-emacs-like-key-bindings-in-monodevelop</id>
    <content type="html"><![CDATA[<p>I&rsquo;m playing around with <a href="http://unity3d.com/">Unity</a> to try to learn how it works.  Shout out to <a href="http://infiniteammo.ca/">Infinite Ammo</a> for the excellent <a href="http://www.youtube.com/playlist?list=PLEEAEA1E6B11B4DAE">video tutorials</a>.</p>

<p>Since I don&rsquo;t know much about Unity, I&rsquo;m reluctantly using their included <a href="http://monodevelop.com/">MonoDevelop IDE</a>.  While I&rsquo;d heard that Emacs-like key bindings were included, in the build I installed they weren&rsquo;t present.</p>

<p>MonoDevelop does not make it easy to import new key binding schemes (the <a href="http://mjhutchinson.com/journal/2011/02/06/key_bindings">blog post linked here</a> suggests submitting a bug report to propose new key bindings&#x2026;).  So, I did a little digging around on github and found the <a href="https://github.com/mono/monodevelop/blob/master/main/src/core/MonoDevelop.Ide/options/KeyBindingSchemeEmacs.xml">default emacs key binding scheme</a> that I imagine should have been included in the MonoDevelop build I installed.</p>

<p>There was no way to add this key binding scheme to my available key bindings in MonoDevelop, so I hacked my Custom key binding file located at <code>~/Library/MonoDevelop-Unity-4.0/KeyBindings/Custom.mac-kb.xml</code>.</p>

<p>I started with some simple copypasta.  But then I found some useful
navigation features were lacking.  So, I added key binds that
immediately came to mind, like <code>Alt-f</code> for moving forward one word and
<code>Alt-b</code> for backward word.  Yes, I know these are <code>M-f</code> in Emacs, but
I&rsquo;m using MonoDevelop&rsquo;s syntax here.</p>

<p>My key bindings are available in the gist below.  I&rsquo;ll update this
gist when I add key bindings, to keep a current working version
available.</p>

<script src="https://gist.github.com/zerosalife/9096788.js"></script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Bunnies Don't Surf #flappyjam]]></title>
    <link href="http://zerosalife.github.io/blog/2014/02/15/bunnies-dont-surf-number-flappyjam/"/>
    <updated>2014-02-15T08:40:03-06:00</updated>
    <id>http://zerosalife.github.io/blog/2014/02/15/bunnies-dont-surf-number-flappyjam</id>
    <content type="html"><![CDATA[<p><img class="center" src="https://raw.github.com/zerosalife/bunnies-dont-surf/master/screenshot.png"></p>

<p>Here&rsquo;s a WIP FlappyBird-like game prototype for <a href="http://itch.io/jam/flappyjam">#flappyjam</a>: <a href="https://github.com/zerosalife/bunnies-dont-surf">Bunnies Don&rsquo;t Surf</a>. You are an unfortunate rabbit whose warren is being flooded by a passing thunderstorm.  You have to navigate the tunnels of the warren, propelled by the wave of water flooding your home.  There&rsquo;s only one problem: Bunnies Don&rsquo;t Surf.  So you&rsquo;re stuck hopping up and down in a futile attempt to survive.</p>

<p>Bunnies Don&rsquo;t Surf requires <a href="http://www.python.org/">Python</a> and <a href="http://pygame.org/news.html">pygame</a> (<a href="http://pygame.org/download.shtml">version 1.9.1</a>) to play.</p>

<p>Tap <code>SPACE</code> to hop. That&rsquo;s about all there is to say about the controls.</p>

<p>As I&rsquo;m sure you can see, the game is in dire need of art assets, sound assets, and some sort of high score system.  I&rsquo;ll do my best to add these, once time allows. If anyone has feedback or art design ideas, please let me know in the comments section or on Twitter.  I&rsquo;d love to hear it.</p>

<p>I&rsquo;ll post updates as the game progresses, and officially submit it to <a href="http://itch.io/jam/flappyjam">#flappyjam</a> if it&rsquo;s done before the jam ends on February 24.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[An in-depth tour of Tetris]]></title>
    <link href="http://zerosalife.github.io/blog/2014/02/08/an-in-depth-tour-of-tetris/"/>
    <updated>2014-02-08T08:34:35-06:00</updated>
    <id>http://zerosalife.github.io/blog/2014/02/08/an-in-depth-tour-of-tetris</id>
    <content type="html"><![CDATA[<p><img class="center" src="http://upload.wikimedia.org/wikipedia/en/a/ae/Tetris_NES_play.png"></p>

<p style="text-align:center;"> Image from <a href="http://en.wikipedia.org/wiki/Tetris">wikipedia.org</a>.</p>

<p>This week I&rsquo;ve spent quite some time reading
<a href="http://meatfighter.com/nintendotetrisai/">this article</a> on
<a href="http://meatfighter.com/">MeatFighter.com</a>.  The article reverse
engineers the inner-workings of
<a href="http://en.wikipedia.org/wiki/Tetris#NES">NES Tetris</a>.  With superb
visual aids, the author, o__1<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup> , surveys the mechanics and data
structures used to implement Tetris on the NES.  Then o__1 designs
and implements an AI script to play Tetris with super-human speed and
precision.  o__1 even describes how to try it at home, providing
instructions and the necessary Lua scripts to run the AI on your own
copy of Tetris.</p>

<p>I hope to see more articles looking back on classic games with this
tremendous attention to detail.  An older
<a href="http://home.comcast.net/~jpittman2/pacman/pacmandossier.html">article looking at Pac-man AI</a>
shows similar obsessive depth.  Articles like these help supplement
our appreciation of these games as works of art by documenting the
essential technical complexities underlying these games.  I think
that&rsquo;s a good thing for everyone from hobby developers to professional
developers, as well as designers and fans.</p>
<div class="footnotes">
<hr/>
<ol>
<li id="fn:1">
<p>I&rsquo;m referring to the author by the contact email listed on the website.<a href="#fnref:1" rev="footnote">&#8617;</a></p></li>
</ol>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Some thoughts on Attack of the Friday Monsters]]></title>
    <link href="http://zerosalife.github.io/blog/2014/02/01/some-thoughts-on-attack-of-the-friday-monsters/"/>
    <updated>2014-02-01T08:32:40-06:00</updated>
    <id>http://zerosalife.github.io/blog/2014/02/01/some-thoughts-on-attack-of-the-friday-monsters</id>
    <content type="html"><![CDATA[<p>It&rsquo;s hard to say anything new about Attack of the Friday Monsters, a
game that splashed on the scene months ago.  The work of its creator
was lovingly lauded by <a href="https://twitter.com/rdbaaa">Ray Barnholt</a>&#x2013;a noted <em><a href="http://en.wikipedia.org/wiki/Boku_no_Natsuyasumi">Boku no Natsuyasumi</a></em>
fanatic&#x2013;in such a reverent way in his <a href="http://scroll.vg/issues/10">SCROLL magazine</a> that it&rsquo;s
almost sacrilegious to try to write more.  So instead of doing a
point-by-point review, I&rsquo;ll mention some details that stand out to me,
personally.</p>

<p>I played through most of Attack of the Friday Monsters on a flight the
day after I watched Miyazaki&rsquo;s <a href="http://en.wikipedia.org/wiki/Arrietty">Secret World of Arrietty</a>.  Sure one had
beautiful water colors and amazing visual tricks mimicking real
camerawork and the other used pre-rendered backgrounds with blocky
polygonal actors on the stage, but these art styles complimented one
another.  They didn&rsquo;t clash.</p>

<p><a href="http://zerosalife.github.io/images/assets/aotfm.JPG"><img class="center" src="http://zerosalife.github.io/images/assets/aotfm.JPG" width="320" height="320"></a></p>

<p>I was struck by the ambient sounds that bring the pre-rendered
backgrounds and polygonal characters to life. The periodic train
sounds, presaging the arrival of an in-engine rendered train&#x2013;sort of
quirky and quaint with today&rsquo;s game engines powerful enough to render
both background and foreground objects&#x2013;remind me of a previous
exposure to Japanese culture: the first time I watched <a href="http://en.wikipedia.org/wiki/Neon_Genesis_Evangelion">Neon Genesis
Evangelion</a> as a teenager.  There are the ubiquitous cricket or cicada
sounds that were also present in Eva, but for me, they hearken back to
a youth spent in the rural South.  The drone of cicadas in the sticky
summer heat reminds me of falling asleep in a Mississippi home, of
walking into cool woods after standing in a sunny meadow.</p>

<p>The whole game engine is full of quirks and reminders of the PS1 era
of gaming.  But one of the mechanics seems rather novel, an addition
seemingly for its own sake, with little influence on actual plot or
gameplay.  I&rsquo;m talking about the spell casting mechanic, reminiscent
of games children used to play in 70s Japan, the time in which Attack
of the Friday Monsters takes place.</p>

<p>If you win the sometimes annoying, somewhat forgettable,
rock-paper-scissors card game, fueled by collectibles strewn
throughout the world, you gain the ability to cast spells on your
buddies, knocking them down.  It has no bearing on the outcome of the
story.  The spell system is simply decoration that deepens the story
by providing a more complete world, accurately capturing what it feels
like to grow up as a child in Japan during the 70s.</p>

<p>You are allowed to pick, and reorder, the phrases of the spell your
character speaks.  This type of cosmetic customization is typical in
modern games, and in Attack of the Friday Monsters it&rsquo;s nothing more
than cosmetic, but it could have been used in surprising ways.</p>

<p>I realized the potential depth of this mechanic during a phone
conversation with my brother. As I told him about the spell casting,
he mentioned a Kickstarted pen and paper RPG called <a href="http://www.magiciansrpg.com/">Magicians</a>.</p>

<p>Magicians uses spells spoken in another language as both an impulse
toward learning the language and a mechanic for determining the
success or failure of an action. The game my brother described
involved a Harry Potter-esque international school for magicians in
Korea.</p>

<p>To use magic, the characters, and thus the players, have to correctly
speak Korean words&#x2013;at least with enough accuracy to satisfy the
voice-recognition system of an online translation service.  This sets
up the potential for a rather clever scenario in which characters&#8217;
<em><a href="http://en.wikipedia.org/wiki/Bildungsroman">Bildungsroman</a></em> stories
are echoed by the players&#8217; acquisition of the language.</p>

<p>At present, on the 3DS, the kind of voice recognition required for
this sort of is <a href="http://www.gamefaqs.com/boards/997781-/58911600">immature</a>.  But it&rsquo;s certainly possible on more
powerful platforms.</p>

<p>One way to exploit the 3DS, and other devices with touch interfaces,
involves learning written language, such as Japanese <em><a href="http://en.wikipedia.org/wiki/Hiragana">hiragana</a></em> or
<em><a href="http://en.wikipedia.org/wiki/Katakana">katakana</a></em>.  I can imagine a magic mechanic that involves correctly
writing scrolls, where the fidelity of the player&rsquo;s calligraphic
strokes determines the strength and efficacy of the scrolls.</p>

<p>Another possible approach is to build up language comprehension by
constructing words out of syllables.  Given several options, one would
choose the correct syllable to complete the necessary word, in order
to perform an action or cast a spell.  A similar sort of approach
would work for learning syntax, completing or building a sentence with
the appropriate words.</p>

<p>Attack of the Friday Monsters is a quick experience, but the depth of
its design has made it a memorable one.  If you&rsquo;d like to learn more
about the game and its creator, you can check out <a href="http://scroll.vg/extras/summer-vacation-confidential/#a">this interview</a> by
Ray Barnholt, which covers Attack of the Friday Monsters and other
games by creator, Kaz Ayabe.</p>
]]></content>
  </entry>
  
</feed>

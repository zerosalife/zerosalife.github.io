<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: design | zero's a life]]></title>
  <link href="http://zerosalife.github.io/blog/categories/design/atom.xml" rel="self"/>
  <link href="http://zerosalife.github.io/"/>
  <updated>2014-06-07T15:06:24-04:00</updated>
  <id>http://zerosalife.github.io/</id>
  <author>
    <name><![CDATA[zerosalife]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Why you should start simple]]></title>
    <link href="http://zerosalife.github.io/blog/2014/06/07/why-you-should-start-simple/"/>
    <updated>2014-06-07T14:58:34-04:00</updated>
    <id>http://zerosalife.github.io/blog/2014/06/07/why-you-should-start-simple</id>
    <content type="html"><![CDATA[<p><a href="http://twitter.com/hobbygamedev">@HobbyGameDev&rsquo;s</a> long-read <a href="http://www.hobbygamedev.com/beg/incremental-learning/">&ldquo;Reasons for Modest First Projects and Incremental Learning&rdquo;</a> tells the tragic tale of overambitious novice developers.</p>

<!--more-->


<p>In a response to a doubting tweeter, HGD advocates starting modestly to slowly build skills, so that you can tackle more complicated projects later on.  Avoiding overambitious projects that are way outside of your comfort zone is one of the stumbling points for novice and hobby game developers, like myself.</p>

<p>In the <a href="http://zerosalife.github.io/blog/2014/05/31/hammock-driven-creativity/">previous post about Hammock Driven Creativity</a>, I highlighted Rich Hickey&rsquo;s suggestion to keep multiple projects going in order to avoid stagnation.  While I agree with this, it&rsquo;s important to judge the scope of those projects with a critical eye.</p>

<p>Far too often, my ideas start, at least in my mind, with ambitious artwork, animation, and multiple complex combinations of mechanics.  I am neither talented nor skilled enough to pull these projects off.  So it&rsquo;s easy to get stuck.</p>

<p>I often find myself implementing some ad-hoc animation system, spending time reinventing the frame-based or skeletal wheel, as it were.  Animation shouldn&rsquo;t take priority, especially considering that my best artwork is derivative and possibly one step above programmer art.  I should focus on creating compelling prototypes, and worry about polish later.</p>

<p>To build your skillset, HGD suggests starting out by remaking historical games.  By implementing tried-and-true mechanics that are necessarily simple in scope given their ancient hardware, you can confront the problems involved in creating a full game rather than a half-finished proof-of-concept.</p>

<p>By half-finished, I&rsquo;m thinking of a time where I completely abandoned a concept because I was hung-up on optimizing a tile-based room system.  Rather than making the actual gameplay fun and complete, I was focusing all of my time figuring out how to make walls.  Walls are nice in a finished game, and you could make the case that they are required constraints to achieve good gameplay, but they are not where the fun is.  As HGD and my previous post point out, you can keep trying to work on these overly ambitious projects, but your productivity will suffer.</p>

<p>Best to reap the rewards that come from continued productivity and, as HGD says, pick a fight you can win.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hammock Driven Creativity]]></title>
    <link href="http://zerosalife.github.io/blog/2014/05/31/hammock-driven-creativity/"/>
    <updated>2014-05-31T12:28:40-04:00</updated>
    <id>http://zerosalife.github.io/blog/2014/05/31/hammock-driven-creativity</id>
    <content type="html"><![CDATA[<p>In 2010, <a href="https://twitter.com/richhickey">Rich Hickey</a> spoke at Clojure Conj about <a href="http://www.youtube.com/watch?v%3Df84n5oFoZBc">&lsquo;Hammock Driven Development&rsquo;</a>.  Hickey was talking about the benefit of down-time for noodling about software design.  Specifically, Hickey means using down-time after considerably &lsquo;loading up&rsquo; your mind with aspects of the problem, in order to leverage background offline processes to solve those difficult problems.</p>

<!--more-->


<h2>Wait</h2>

<p>Hickey&rsquo;s advice is to wait for it.  Wait overnight.  Get good rest and make sure that you are sleeping well.  Then you will be able to think about the clearly on the next day.  If you are lucky perhaps you will receive inspiration from a dream and wake up with the problem solved.  This sort of inspiration is what Hickey means by leveraging background processing.</p>

<h2>Multiply</h2>

<p>Hickey mentions working on more than one project.  By having multiple projects, you avoid the problems of creative block, or writer&rsquo;s block.  You can be productive simply by working on another project.  One drawback is that frantically flitting from project to project can lead to problems finishing any single project.  I am often guilty of this.</p>

<p>Eventually, I plan on writing about properly scoping projects to make it possible to get them to a finished state.  One method that works for me is getting something to the point that I can write a blog post about it.  Even if it&rsquo;s not &lsquo;finished&rsquo; finished, I get some satisfaction with putting it out there in a relatively well thought out and complete form.</p>

<p>My solution is to <strong>record, record, record</strong>.  I keep lots of notes, both in more structured form on this blog and in more sketchy form in files on my computer.  I also draw out visual design ideas in a notebook.  Sometimes I will set up skeleton game projects simply to test out an idea.  If I have some sudden insight into a problem, then all of these ideas are available later.</p>

<h2>Switch</h2>

<p>Hickey says to avoid being stuck, switch.  That is why having multiple projects can help.  Hickey also mentions a great suggestion of talking about design hiccups and problems with other people.  Tweet about your design roadblocks.  Write a blog post about them.  Telepathically communicate about them before you go to sleep, so magical dream elves can come and solve them for you.</p>

<h2>Final Thoughts</h2>

<blockquote><p>Summary: There is no summary.  This is a rant.</p></blockquote>

<p>-Rich Hickey</p>

<p>Unless you are Rich Hickey or&#x2013;I dunno&#x2013;Gary Gygax, simply thinking about a problem <em>a priori</em> will not result in a great game.  There is still something to be said for getting your hands dirty and iterating on a design.  However the techniques highlighted in Hickey&rsquo;s talk can be useful when you are stuck on a design problem.</p>

<p>Hit me up in the comments or on the <a href="https://twitter.com/zerosalife">tweet tweet</a> if you have any great Hammock Driven Design tips that I haven&rsquo;t covered here.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Quarries of Scred Roadmap]]></title>
    <link href="http://zerosalife.github.io/blog/2014/05/24/quarries-of-scred-roadmap/"/>
    <updated>2014-05-24T16:49:08-04:00</updated>
    <id>http://zerosalife.github.io/blog/2014/05/24/quarries-of-scred-roadmap</id>
    <content type="html"><![CDATA[<p>The <a href="http://darkestkale.itch.io/quarries-of-scred">Quarries of Scred</a> <a href="https://twitter.com/darkestkale">developer</a> released an image showing the overview of Scred&rsquo;s 14-day game development.  I find it informative for a couple of reasons.  First it&rsquo;s not limited to the core features of the game, Kale&rsquo;s also included public relations and marketing information.  Second, the fact that it&rsquo;s incomplete shows how Kale&rsquo;s prioritized critical elements of the game.</p>

<p>Rather than blatantly stealing the <a href="http://www.indiedb.com/games/quarries-of-scred/images/quarries-of-scred-roadmap-2013-11-28-01">roadmap for Quarries of Scred</a>, I&rsquo;ll give you a few seconds to go and capture an eidetic mental image.  Got it?  Great.  I guess all you cheaters who opened it another tab can follow along too.</p>

<!--more-->


<h2>Core Gameplay</h2>

<p>Looking at the presumably completed &lsquo;green light&rsquo; items, Core Gameplay is almost finished.  And it should be.  Without Core Gameplay, there&rsquo;s not much game to be played.</p>

<p>It looks like they have not included actual aspects of the core mechanic implementation on this roadmap.  However, they&rsquo;re using the roadmap as a method of cataloging oft-overlooked features that add polish to the final game.</p>

<p>They have a milestone for implementing a persistent high score system.  This hurdle is easy to imagine, since we see it in almost every game we play.  But it can be tricky to implement in a robust and efficient manner.</p>

<p>Several elements of UI are included on the roadmap.  They could be neglected in a prototype, these UI elements can make a finished game welcoming for new players and compelling enough to replay.  Info screens can clarify the world for tyros and explicitly show unique challenge states to experienced players.  Death information, like gravestones in Nethack, provides potentially entertaining feedback for the players attempting to hone their skills at the game.</p>

<p>I&rsquo;m not sure whether they finished implementing rocket ship building gameplay in Quarries of Scred, but this should be a goal for every game.</p>

<h2>PR</h2>

<p>Marketing is an aspect of game development that is easy to overlook as an inexperienced indie or hobby gamedev with a few gamejams under your belt.  The pressure to simply finish a game, any shippable game, overshadows what to do with it once it&rsquo;s released.</p>

<p>Setting up an IndieDB page to track the progress is a great idea.  And, since it doesn&rsquo;t necessarily require a finished product, it can be done early on in the development process.  The priorities of creating an IndieDB Icon, Header Image, and Preview Image show Kale&rsquo;s clearly interested in branding Scred as a marketable indie title.</p>

<p>I can confirm that a <a href="https://www.youtube.com/watch?v%3DBrZ_POiKJO4">Trailer</a>, <a href="http://darkestkale.itch.io/quarries-of-scred">Website</a>, and <a href="http://img.itch.io/aW1hZ2UvODc0LzQ0MTIucG5n/original/Npan5L.png">Box Art</a> came along in due time.  The inclusion of Box Art in a download only indie title is particularly charming, even in an atmosphere awash with these things, the art for Scred&rsquo;s box is fun and quaint, in a good way.</p>

<h2>Further Content</h2>

<p>Further Content looks like features that would directly build on those already implemented in the game.  Rather than being classified as Fluff, these extra features would complement the content and features already implemented in the game.</p>

<p>It&rsquo;s important to have the courage to &lsquo;kill your darlings&rsquo; in cases like this.  Some of the items under Fluff like pretty important to making a good game, but if they are too demanding to fit in the schedule allotted to create the game, they have to go.</p>

<p>One of the buildings has made it in.  And I think the second building is in the final game. Not sure whether the Rare Flower survived.</p>

<h2>Bookending</h2>

<p>The Bookending category looks like a lot of the UI improvements I talked about above.  They certainly improve players' experience, but they may not be absolutely necessary to get the game out the door.</p>

<p>I can only speculate that configurable keys are highlighted in gray because it would be silly not to include them.  For that matter, everything except troubleshooting info adds delicious spice to the well-seasoned dish that the Core Gameplay milestones create.</p>

<h2>Fluff</h2>

<p>It looks like the Fluff category represents additional features that aren&rsquo;t required to make a working game.  The ability to select a seed is probably a new system that requires designing and implementing, much like the UI stuff in the Bookending category.  New Sprites and Death Animation are probably a similar story.</p>

<p>You may argue that music and sound are critical for a completed game.  But if you are not a musically inclined person, the shear amount of work required to get something that sounds like the death-throes of a thousand Gameboys (note: this is not a good thing) could double your production time.  The New Sprites mentioned in the previous paragraph are probably a similar case of requiring too much time that could be more productively devoted elsewhere in the project.</p>

<h2>Closing Thoughts</h2>

<p>This kind of frank openness about game design is unusual to get prior to the publication of a game.  It&rsquo;s really great to see the design documents behind a game, even if it comes out years after release.  It&rsquo;s especially informative to see an in-progress version where the developer is unafraid to lay the goals out there, to show where the project succeeds and possibly falls short.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Follow-up to the centrality of caves]]></title>
    <link href="http://zerosalife.github.io/blog/2014/05/10/follow-up-to-the-centrality-of-caves/"/>
    <updated>2014-05-10T11:27:49-04:00</updated>
    <id>http://zerosalife.github.io/blog/2014/05/10/follow-up-to-the-centrality-of-caves</id>
    <content type="html"><![CDATA[<p>My <a href="/blog/2014/05/03/why-are-caves-central-to-so-many-games/">post last week</a> about caves struck a nerve.  I received a lot of encouraging retweets and favorites.  I also received some great feedback.</p>

<p>Paul Diaz points out one design constraint granted by caves that I hadn&rsquo;t considered.</p>

<p><div class='embed tweet'>Tweet could not be processed</div></p>

<p>I think Paul is right, that this falls within the scope of caves' linearity.  I&rsquo;ve been thinking a bit about a possible taxonomy of cave environments in games, but for the purposes of these posts I&rsquo;ll keep it more general.  A cave is a cave, right?  <a href="http://en.wikipedia.org/wiki/I_know_it_when_I_see_it">We know it when we see it.</a></p>

<p>Any old screen in a game can be cave-like in the way its environmental design constraints fit into the game world.  Here I&rsquo;m using &lsquo;screen&rsquo; to refer to a room in a metroid-like game or a level in other sorts of games&#x2013;some arbitrary atomic unit of division of the game environment constituting a discrete area.</p>

<p>For the purpose of argument, Paul&rsquo;s point forces us to think of the most cave-y of caves, which I think was the intent behind the original question in the first place.  Because caves are dark environments, dank environments, <em>interior</em> environments, they lack the uniform lighting that typically characterizes the exterior &lsquo;overworld&rsquo; in games.  As Paul states, lighting cues can serve as guideposts for the player, directing attention toward the critical path.</p>

<p>I view this example as a manifestation of the fundamental reduction in degrees of freedom of play achieved by the interiority, and thus, linearity of caves.  The fact that there are more walls, and therefore fewer possible places for the player to go, allows for the designer, using careful construction, to communicate intent to the player through the environment itself.  I don&rsquo;t mean to say here that such communication is impossible outside of caves, just that caves are one simple and straightforward way to achieve this constrained, communicative sort of design.  This vocabulary of design showed up early on in the history of games, it worked, and it has persisted.</p>

<p>Thanks and shout outs to <a href="https://twitter.com/sleepytearyeyed">Paul Diaz</a>, whose feedback inspired this follow-up post.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Why are caves central to so many games?]]></title>
    <link href="http://zerosalife.github.io/blog/2014/05/03/why-are-caves-central-to-so-many-games/"/>
    <updated>2014-05-03T10:46:11-04:00</updated>
    <id>http://zerosalife.github.io/blog/2014/05/03/why-are-caves-central-to-so-many-games</id>
    <content type="html"><![CDATA[<p>On twitter, <a href="https://twitter.com/psysal">@psysal</a> posed this question to the game dev community:</p>

<p><div class='embed tweet'>Tweet could not be processed</div></p>

<p>You can see all the responses by following the link to the original tweet.</p>

<p>The consensus is that caves are essential features for games for three reasons.</p>

<ol>
<li>Linearity</li>
<li>Repeatability of composition</li>
<li>Curiosity</li>
</ol>


<!--more-->


<h2>Caves are linear</h2>

<p>In terms of their schematic representation in the design of a game, caves can boil down to one enclosed &lsquo;area&rsquo; or room with a single entrance.  This doesn&rsquo;t account for some of the amazing environments in intricately designed games like <a href="http://en.wikipedia.org/wiki/Super_Metroid">Super Metroid</a>, recently broken down by <a href="https://twitter.com/gamespite">@gamespite</a> in <a href="http://www.anatomyofgames.com/2013/12/08/the-anatomy-of-super-metroid-01-moving-pictures/">the Anatomy of Games series</a>.</p>

<p>But, at the most basic level, a cave must have a mouth, or an entrance, and at least one room.  This simplifies the representation of the critical path of play, because once the cave has been fully explored there are no possible branches that the player could have taken to leave the cave.  The single entrance is also a single exit.  Even if there are many internal rooms, this representation holds true, as long as there are ultimately no &lsquo;back doors&rsquo; out of the cave.</p>

<p>The designer can rely on the fact that once the player has received any rewards for exploring the cave, the player can reasonably be expected to pop out of the entrance of the cave looking for the next available challenge surmountable with any freshly acquired toys.</p>

<h2>Caves offer repeatable composition</h2>

<p>For whatever atavistic significance they hold in our psyches, caves do not have to rely on realistic representations in game design.  Any old hole in some rock will almost invariably create a believable sense of cave-ness.  Yeah, I said cave-ness. You know cave-ocity, general cave-itude.</p>

<p>Since we don&rsquo;t spend much time in caves, day-to-day, we don&rsquo;t hold them to the same level of fidelity to which we would hold, say, buildings or automobiles.  The same architectural details necessary to represent a house in a video game can be painted in broad strokes to represent a cave.</p>

<p>In tile-based games, this means that a designer can reuse tiles over and over again to craft a general shape without worrying too much about players noticing, or being bothered by, the similarities.  Caves are thus more defined by the space created rather than the graphics used to define them.  This sense of space is what drives the third essential feature of caves in game design, a sense of curiosity, the drive to explore.</p>

<h2>Caves are inherently curious</h2>

<p>I&rsquo;m not sure I buy the argument that we have some evolutionary instinct that drives us to explore caves, but the fact remains.  Something about caves begs exploration.</p>

<p>Call it the <em>Will to Spelunk</em>.</p>

<p>Once a space has been created, the player wants to explore every nook and cranny for collectible power ups or items.  Certainly the rewards are powerful motivators.  But there is something to the exploration for exploration&rsquo;s sake.  Simply completing one&rsquo;s mental map of the space becomes a goal in itself.</p>

<h2>Coda</h2>

<p>It&rsquo;s intriguing that caves are such a fixture in the established vocabulary of game design.  The three features highlighted in this post make it clear that caves remain a useful game design pattern because they serve an essential purpose in the ludic lexicon of games.</p>
]]></content>
  </entry>
  
</feed>

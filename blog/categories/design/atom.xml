<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: design | zero's a life]]></title>
  <link href="http://zerosalife.github.io/blog/categories/design/atom.xml" rel="self"/>
  <link href="http://zerosalife.github.io/"/>
  <updated>2016-05-21T09:54:01-05:00</updated>
  <id>http://zerosalife.github.io/</id>
  <author>
    <name><![CDATA[zerosalife]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[What makes a game feature complete?]]></title>
    <link href="http://zerosalife.github.io/blog/2016/05/21/what-makes-a-game-feature-complete/"/>
    <updated>2016-05-21T09:47:38-05:00</updated>
    <id>http://zerosalife.github.io/blog/2016/05/21/what-makes-a-game-feature-complete</id>
    <content type="html"><![CDATA[<p>Of course, the makeup of a list of game features depend on the particular project in question.  This list of features required to make <a href="http://asherv.com/threes/"><em>Threes</em></a> feature complete comes from <a href="http://asherv.com/threes/threemails/#threemails">early on in the published emails about the game&rsquo;s development</a>.</p>

<h2>Features</h2>

<ul>
<li>Core Game</li>
<li>Tutorial</li>
<li>Menu Flow</li>
<li>Music</li>
<li>SFX</li>
<li>Monster Animation</li>
<li>Game Rotation (for the iPad/PC)</li>
<li>Leaderboards</li>
<li>Achievements</li>
<li>Twitter</li>
<li>Skin Packs</li>
<li>IAP</li>
<li>(Undos?)</li>
<li>Puzzlejuice Cross-promotion</li>
</ul>


<p>The final product has certainly received many times over more polish than the time spent implementing these features and the list may have changed.  But, from time to time, it&rsquo;s nice to see what other successful projects have deemed necessary to get a better sense of how to plan for your own projects.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mario Design Interview]]></title>
    <link href="http://zerosalife.github.io/blog/2016/04/30/mario-design-interview/"/>
    <updated>2016-04-30T08:48:07-05:00</updated>
    <id>http://zerosalife.github.io/blog/2016/04/30/mario-design-interview</id>
    <content type="html"><![CDATA[<p>In the interest of preserving an interview that could easily vanish into the ether following a Nintendo website redesign, I&rsquo;m going to collect some wisdom from <a href="http://iwataasks.nintendo.com/interviews/#/wii/nsmb/0/0">an Iwata Asks with Shigeru Miyamoto</a>.</p>

<!--more-->


<h2>Elements of a fun game</h2>

<ul>
<li>&ldquo;A fun game should be easy to understand &#x2013; you should be able to take one look at it and know what you have to do straight away.&rdquo;</li>
<li>&ldquo;It should be so well constructed that you can tell at a glance what your goal is and, even if you don&rsquo;t succeed, you&rsquo;ll blame yourself rather than the game.&rdquo;</li>
<li>&ldquo;The people standing around watching the game have also got to be able to enjoy it.&rdquo;</li>
</ul>


<h2>Form follows function</h2>

<p>A repeated theme that emerges in the interview is that constraints of the hardware or display technology restricted the designs.  Miyamoto and crew had to come up with simple, evocative designs that communicate the function for each of the entities in the game world.</p>

<p>Following the maxim that a fun game should be easy to understand, straightforward designs that show an entity&rsquo;s purpose in an easily recognizable manner communicate the designer&rsquo;s intent to the player.</p>

<h2>Try it and see</h2>

<p>Gameplay staples from the Mario series that seem unequivocally well-designed emerged from a simple iterative prototyping process.</p>

<p>The designers had an idea, for example, &ldquo;What if we double the size of our main character?&rdquo;  They then implemented it in a development build of the game, and tested it out to see if it was fun.  By testing this particular design choice, the designers came up with the idea for a mechanic in the game to double the size of the main character as the result of picking up a power-up.</p>

<h2>Communicating through design</h2>

<p>The simple introduction of the mushroom power-up is a clever bit of communication through the design of a level.  By this point the player has likely learned that stomping on Goombas squashes them.  The placement of a power-up block above the player situates it so you have no choice but to hit it when you try to squash the Goomba.  By keeping the player trapped under a line of blocks, the power-up has time to bounce off of a pipe (blatantly informing the player that power-ups can bounce) and the player is likely to run into it, thus discovering the power-up&rsquo;s purpose.</p>

<p>Notice how the construction of the level (one of the elements of fun), its design, makes it easy to understand (another element of fun) the function of these power-ups.  At no point is it necessary to wrest control of the player to blabber on about what power-ups are, why the player may want to pick them up, what other power-ups exist in the world, <em>et cetera, ad infinitum, ad nauseum</em>.</p>

<h2>Feel and smell</h2>

<p>These two terms refer to the subjective aesthetic impression of the perceptual and interactive elements of a game.  These can be a nice way to distinguish your game from the others out there.</p>

<p>Miyamoto uses the term smell to refer to the overall impression that a game leaves on your senses.  By really making a distinct impression on the player, the experience is likely to stick, leading to replayability.</p>

<p>The feel of a game refers to the subjective feeling the player gets when pressing buttons on the controller.  Every game uses the same controller (more or less), but the feeling that a player gets upon pressing a button can differ drastically depending on the game.  Miyamoto mentions, and I agree, that sound effects have a huge impact on the feel of a game.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Improvisation vs Preparation]]></title>
    <link href="http://zerosalife.github.io/blog/2016/04/23/improvisation-vs-preparation/"/>
    <updated>2016-04-23T09:44:50-05:00</updated>
    <id>http://zerosalife.github.io/blog/2016/04/23/improvisation-vs-preparation</id>
    <content type="html"><![CDATA[<p><em>Or preparation as play.</em></p>

<p>This post was inspired by long set-up times eating into time-crunched
play time for busy adults.</p>

<p>As a young adult with minimal time commitment I had no problem
spending hours preparing for a gaming session among friends.  And
there was little concern for an hour or two spent setting up a
wargaming afternoon.  But in adulthood these time commitments quickly
eat-in to or completely consume any time that would otherwise be spent
having fun, gaming with your friends.</p>

<p>Certain games are suited more to the <em>preparation</em> side of things than
the <em>improvisation</em> side.</p>

<!--more-->


<p>Consider the examples I mentioned above, a gamemaster driven
roleplaying game and a tabletop war game.  Certainly these are fun
pastimes but they require preparation on the part of the individual or
all parties involved.</p>

<p>Roleplaying games require, at least initially, the generation of
player characters for all involved, potentially consuming the entire
first play session.  The gamemaster is, at least ostensibly, required
to plot out a scenario for each play session, necessitating an
substantial noninteractive time investment outside of the normal play
session.</p>

<p>For war games, players must spend time constructing armies, generally
away from the interaction at the table.</p>

<p>How does this differ from say playing stickball or baseball with your
friends in an alley or a field with just a stick and a ball?  The game
starts when the minimally necessary instruments arrive, and continues
even as players come and go.  Interrupting these improvised games is
an almost heinous offense, hence the saying &ldquo;taking the ball and going
home.&rdquo;</p>

<p>To stretch this metaphor beyond the breaking point: in this syllogism,
the polar opposite of pickup baseball or basketball would be ice
hockey, something requiring potentially hours of preparation by a
Zambonist to prepare the playing surface so the players can play for a
relatively short time.</p>

<p>There are a few games that get preparation as play mechanics right,
but I think there is still room for improvement.</p>

<ul>
<li><p><a href="http://glyphpress.com/talk/shock-pdf">Shock</a></p></li>
<li><p><a href="http://www.evilhat.com/home/fate-core/">Fate</a></p></li>
<li><p><a href="http://www.dog-eared-designs.com/primetime-adventures/">Primetime Adventures</a></p></li>
<li><p><a href="http://www.lamemage.com/microscope/">Microscope</a></p></li>
<li><p><a href="http://planet-thirteen.com/Dungeon.aspx">How to Host a Dungeon</a></p></li>
<li><p><a href="http://bullypulpitgames.com/games/fiasco/">Fiasco</a></p></li>
</ul>


<p>These games all turn the world gen and character background into an
gameplay activity, typically performed during the first group play
session.  Shock and Fiasco even do away with the necessity of a GM,
allowing players to take turns serving as protagonists, antagonists,
or third parties.  These examples go a long way toward what I mean by
preparation as play, but I don&rsquo;t think the games have captured the
concept entirely.</p>

<p>What I would be interested in seeing is a separate <em>asynchronous</em> type
of game, where the preparation has mechanics that boil down to a solo
game.  The results of the each player&rsquo;s solo game(s) are then somehow
incorporated and allowed to influence the collaborative group play
session.  If you know of such a game, drop me a line in the comments
or on <a href="https://twitter.com/zerosalife">twitter</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Original Diablo Pitch]]></title>
    <link href="http://zerosalife.github.io/blog/2016/04/02/the-original-diablo-pitch/"/>
    <updated>2016-04-02T09:48:33-05:00</updated>
    <id>http://zerosalife.github.io/blog/2016/04/02/the-original-diablo-pitch</id>
    <content type="html"><![CDATA[<p><a href="https://twitter.com/davidbrevik/status/711420722225106945">David Brevik</a>, one of the original developers of Diablo has released the <a href="http://graybeardgames.blogspot.com/2016/03/original-diablo-pitch-document.html">original pitch document</a>.  Check it out!</p>

<!--more-->


<h2>Anatomy of Diablo&rsquo;s pitch document</h2>

<ul>
<li>Summary</li>
<li>Game Design

<ul>
<li>Overview</li>
<li>Plot and Setting</li>
<li>Gameplay</li>
</ul>
</li>
<li>Marketing</li>
<li>Development</li>
</ul>


<p>In addition to illuminating how to write these documents in general, I find interesting to see how the Diablo devs were planning on leveraging the success of <em>Magic: The Gathering</em>&rsquo;s business model to sell DLC.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How Dungeonmans teaches diagonal movement]]></title>
    <link href="http://zerosalife.github.io/blog/2016/03/19/how-dungeonmans-teaches-diagonal-movement/"/>
    <updated>2016-03-19T09:25:44-05:00</updated>
    <id>http://zerosalife.github.io/blog/2016/03/19/how-dungeonmans-teaches-diagonal-movement</id>
    <content type="html"><![CDATA[<p>Listening to <a href="http://www.roguelikeradio.com/2016/01/episode-114-gameplay-orientated.html">Roguelike Radio</a>, I heard the creator of <a href="https://twitter.com/dungeonmans">Dungeonmans</a> talk about designing levels to teach gameplay concepts.</p>

<!--more-->


<p><a href="http://www.dungeonmans.com/">Dungeonmans</a> has an interesting strategy to teach players to move diagonally early in the game, without requiring a wordy tutorial.</p>

<p>The first level has caves with loot inside.  Some caves are straightforward, allowing players to reach loot without needing to perform a diagonal step.</p>

<pre><code>###
#o#
#.#
</code></pre>

<p>But other caves are different, requiring diagonal movement to get the loot.</p>

<pre><code>###
#o#
##.
</code></pre>

<p>Presenting the diagonal movement mechanic this way is easy and low risk.  If you don&rsquo;t pick it up, it&rsquo;s ok.  You won&rsquo;t die, you just miss out on some loot.</p>

<p>It&rsquo;s also low disturbance.  There&rsquo;s no dialog popping up saying, &ldquo;Hey!  Listen!&rdquo;  The players will either get a kick out of figuring out how to get that pesky loot or simply move on and play more of the game.</p>

<p>It&rsquo;s a win-win situation.</p>
]]></content>
  </entry>
  
</feed>

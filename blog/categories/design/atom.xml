<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: design | zero's a life]]></title>
  <link href="http://zerosalife.github.io/blog/categories/design/atom.xml" rel="self"/>
  <link href="http://zerosalife.github.io/"/>
  <updated>2015-02-21T11:31:53-06:00</updated>
  <id>http://zerosalife.github.io/</id>
  <author>
    <name><![CDATA[zerosalife]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[VGBC Game Design Review: Gunstar Heroes]]></title>
    <link href="http://zerosalife.github.io/blog/2015/02/14/vgbc-game-design-review-gunstar-heroes/"/>
    <updated>2015-02-14T10:25:33-06:00</updated>
    <id>http://zerosalife.github.io/blog/2015/02/14/vgbc-game-design-review-gunstar-heroes</id>
    <content type="html"><![CDATA[<p>Inspired by <a href="http://twitter.com/danctheduck">Daniel Cook&rsquo;s</a> game design review format over at <a href="http://www.lostgarden.com/2005/09/game-design-review-advance-wars-dual.html">Lost Garden</a>.  I&rsquo;m going to take a similar approach to my write up covering
<em>Gunstar Heroes</em>, the first book we&rsquo;ve chosen for the VGBC.</p>

<h2>The Format</h2>

<ul>
<li><strong>A brief history</strong>: What is the historical context of the design of <em>Gunstar Heroes</em>?</li>
<li><strong>Game anthropology</strong>: What market niche does <em>Gunstar Heroes</em> fill?</li>
<li><strong>Layered game design</strong>: What major design lesson(s) does <em>Gunstar Heroes</em> teach us?</li>
<li><strong>What worked and what didn&rsquo;t?</strong>: What design decisions worked and what fell flat?</li>
</ul>


<!--more-->


<h2>Brief history</h2>

<p><em>Gunstar Heroes</em> was the first release by nascent studio Treasure.
But the developers at Treasure were old hats at run-and-gun game design.  Like a group of seasoned musicians coming together to form a supergroup, the studio was created by former Konami employees, to create great games.  Treasure was much smaller than Konami, lending the studio a dynamic, independent vibe that we would label AA or indie today.</p>

<p>Treasure&rsquo;s developers, designers, and artists cut their teeth making some of Konami&rsquo;s biggest hits.  While the list is long, ranging from classics like Castlevania and Metal Gear to relatively unknown games like Snatcher and Rocket Knight Adventures, for the purpose of this article I&rsquo;d like to compare arguably the greatest of its forebears: <em><a href="http://en.wikipedia.org/wiki/Contra_III:_The_Alien_Wars">Contra III: The Alien Wars</a></em>.</p>

<p>Games in the run-and-gun genre are straightforward, you run (and jump) and shoot at enemies (with guns).  <em>Contra III</em> was the pinnacle of the genre in 1993, when <em>Gunstar Heroes</em> was released, by way of the game&rsquo;s attractive graphics, challenging gameplay, excellent music, and varied level design.  <em>Gunstar Heroes</em> represented the developers at Treasure taking the lessons from <em>Contra III</em> and seeking to improve and expand on the previous success.</p>

<h2>Game anthropology</h2>

<p><em>Gunstar Heroes</em> entered a market during the heyday of the run-and-gun
action platformer genre.  The hardware of the 16-bit consoles allowed for better graphics and supported larger numbers of sprites, leading to more engaging and challenging gameplay.  But the hardware and arguably the developer mindsets had not yet evolved to support many other approaches to gameplay.</p>

<p>There are too many copy-cats and also-rans to list.  <em>Contra</em> was a hit and every publisher wanted their own version.  Treasure sought set
<em>Gunstar Heroes</em> off from the crowd by designing expressive sprites
and dynamic gameplay.</p>

<p>To my mind this approach worked, although I&rsquo;m not aware of the sales figures from the time.  The graphics of <em>Gunstar Heroes</em> have helped it occupy mindshare over the long run.  In fact, in my opinion,
<em>Gunstar Heroes</em> looks more like a predecessor to the popular <em>Metal
Slug</em> series than a sequel or offshoot from <em>Contra</em>.  For a game to have this longevity, there must be something the designers have done right.</p>

<h2>First Layer: Core Mechanics</h2>

<h3>Bosses</h3>

<p>An entire article could be devoted to the boss design in <em>Gunstar Heroes</em> by &ldquo;cool character creator&rdquo; HAN aka Tetsuhiko Kikuchi.  But the scope of this article is less concerned with the design of specific encounters and more focused on the overall experience.  A thorough exploration of the boss design would also require more skill in this game than your humble author possesses.</p>

<h2>Second Layer: Creating new variation</h2>

<h3>Controls</h3>

<ul>
<li><p>Right off the bat, players get a choice between two control styles Fixed Shot and Free Shot.  These differ in terms of freedom of movement while allowing for more precise targeting.</p></li>
<li><p>In addition to <em>Contra</em>&rsquo;s ducking and climbing mechanics, <em>Gunstar Heroes</em> adds slides, throws and jump attacks.</p></li>
<li><p>A lot of the additional moves grant invincibility frames.  Sometimes the only way to get through difficult sections of the game without taking damage is to slide or jump attack at the correct time, using the invincibility frames to avoid damage.</p></li>
<li><p>The throws also allow for a new interaction between player characters: throwing the other player.  It can be annoying but that is half of the fun of playing these cooperative games.  The players can also throw some of the bombs that are thrown by enemies.</p></li>
</ul>


<h3>Weapons</h3>

<p>Meaningful choices between the various weapon types allow players to experiment to find combinations that work best for each situation and style of play.  Players can adjust the difficulty of the game by restricting the available weapon combinations, and since weapons persist between levels players can attempt full game restriction-based challenge runs.  The fact that the designers alllowed for interactions between the different weapon types simply adds to the depth of available choices.</p>

<h3>Life is no longer a binary</h3>

<p>Players and bosses have numeric vitality indicators.  Vitality is tracked as an integer value rather than a binary alive/dead state. You start at a vitality of 100 and, notably, there is no maximum.  You can gain more than 100 vitality, adding even more a buffer between playing and the icy clutches of the grim reaper.</p>

<p>Boss vitality is indicated on the screen, communicating directly to the player when the boss will be defeated.  This removes some of the ambiguity of earlier titles, where often the indications that the boss was being damaged could be lost in the sea of explosions and screenshake that characterize the run-and-gun genre.</p>

<p>This approach gives you free range, as a designer, to throw more and more challenges at the player.</p>

<h2>Additional Layers</h2>

<h3>Destructible environment</h3>

<h3>Enemy interactions</h3>

<p>When thrown, enemies can hit other enemies.  Another notable type of enemy interaction is that bombs thrown by enemies can damage other enemies and the thrower.</p>

<p>The result of these additional layers of player choice and interactivity serve to situate the player characters, and thus the players, in the world.  <em>Gunstar Heroes</em> feels less like a series of obstacles to overcome and more like a madcap adventure in which you are desperately trying to survive.  Contrast this with the original <em><a href="http://en.wikipedia.org/wiki/Ninja_Gaiden">Ninja Gaiden</a></em>, in which player agency is reduced to memorizing and executing a series of well-timed button presses.</p>

<h3>The boardgame level</h3>

<p><em>Gunstar Heroes</em> combines the throwing mechanic with a giant die to create the most unique level in the game: The Dice Palace.  The player characters must move through a board populated with boss encounters, item rooms and spaces that can send the players back to the start of the board or require the players to fight a boss without weapons.</p>

<p>The addition of this level creates a dynamic experience that changes with each play through.  The result is a truly unique than the simple test of skill that most boss rushes represent, although there is a more typical boss rush present in one of the later levels.</p>

<h3>Anti-gravity mine carts</h3>

<p>While games like <em><a href="http://en.wikipedia.org/wiki/Battletoads">Battletoads</a></em> have previously done speedy vehicular mine-cart-style levels, <em>Gunstar Heroes</em> takes it to another level (forgive me).  The modified mine carts in <em>Gunstar Heroes</em> allow the players to flip gravity <em>a la</em> under-appreciated late-generation NES action platformer <em><a href="http://en.wikipedia.org/wiki/Metal_Storm_%28video_game%29">Metal Storm</a></em>.</p>

<h3>The genre switch</h3>

<p>Although this is not unique to <em>Gunstar Heroes</em> this may be one of the first times that developers have tried this.  In the last level, the gameplay changes from run-and-gun action to a side view bullet-hell shoot-em-up.  While interesting, to me, this is not where the bulk of the <em>Gunstar Heroes</em> experience lies.</p>

<h2>What worked?</h2>

<ul>
<li><p>Each player can decide on a unique approach, using the various weapon combinations and shot types.</p></li>
<li><p>Some of the combinations were overpowered but that was half of the fun.  Less skilled players could equip the over powered lighting/chaser combination, while experienced players could try to become proficient in the other combinations.</p></li>
<li><p>Anti-gravity is communicated through overlap with previous commands like jump attack.  When the minecart level starts, the player likely doesn&rsquo;t know about the anti-gravity mechanic, that is, until an enemy comes into jump attack range.</p></li>
<li><p>Switching between combined and individual weapon powerups allows the player to exercise choice, a fundamental goal of game design and play in general.</p></li>
</ul>


<h2>What didn&rsquo;t work?</h2>

<ul>
<li><p>The length.  This is hardly a damning complaint, but the game could be longer.  There are seven stages, a couple of which are totally innovative, but most of them have been done before.  Perhaps it was simply a problem of time and cartridge size constraints.</p></li>
<li><p>The poor, poor framerate couldn&rsquo;t always keep up with the destruction on the screen, but again, this is likely due to constraints of the technology during the early 90s.</p></li>
<li><p>The airship level sets up rules and breaks them. You need to keep climbing and climbing and climbing until, well, you don&rsquo;t need to any more.  You need to get on top of that airship and if you don&rsquo;t, it&rsquo;ll take off leaving you marooned with nary a Wilson to keep you company.</p></li>
</ul>


<h2>Conclusion</h2>

<p><em>Gunstar Heroes</em> illustrates the maxim (allegedly) espoused by Sid
Meier: &ldquo;A game is a series of interesting choices.&rdquo;  It takes ideas formed in the great <em>Contra III</em> and expands the number of interesting choices and interactions for the player, leading to an undeniable classic.</p>

<p>I hope you&rsquo;ve enjoyed this Design Review.  It requires a lot of effort to put these together, so I&rsquo;d like to take my hat off to Daniel Cook at Lost Garden, who inspired me to use this format.  I&rsquo;d also like to thank Rick Wolf for contributing to and helping to crystallize the ideas in this article.  I also could not have done this without the research cited in my Resources, so shoutout to <a href="http://wikipedia.org">Wikipedia</a> and <a href="http://www.hardcoregaming101.net">Hardcore Gaming 101</a>.</p>

<p>Expect more Design Reviews as our book club mulls over more games in the coming months.</p>

<h2>Resources</h2>

<p>I got my information from:</p>

<ul>
<li><a href="http://en.wikipedia.org/wiki/Gunstar_Heroes">http://en.wikipedia.org/wiki/Gunstar_Heroes</a></li>
<li><a href="http://www.hardcoregaming101.net/gunstarheroes/gunstarheroes.htm">http://www.hardcoregaming101.net/gunstarheroes/gunstarheroes.htm</a></li>
</ul>


<p>Many thanks to the original authors of these articles.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[VGBC: a Video Game Book Club]]></title>
    <link href="http://zerosalife.github.io/blog/2015/01/24/vgbc-a-video-game-book-club/"/>
    <updated>2015-01-24T12:54:10-06:00</updated>
    <id>http://zerosalife.github.io/blog/2015/01/24/vgbc-a-video-game-book-club</id>
    <content type="html"><![CDATA[<p>Credit for the original idea for a #VGBC goes to Rick Wolf, who also
coauthored this post.  You can get in touch with Rick at
<a href="https://twitter.com/involvingsalmon">@InvolvingSalmon</a> on Twitter.</p>

<h2>What?</h2>

<p>Your very own #VGBC (one of those newfangled acronyms we hear are all the rage these days).  A <strong>club</strong> devoted to selecting and critically
<strong>discussing video games</strong>. We like the acronym #VGBC, but you can call it
what you feel. It&rsquo;s worth noting that we aren’t reading a book each month (although some game design books would do us well), but we’re calling it a “book” club to emphasize the format that encourages thoughtful discussion.</p>

<p>Each meeting you can discuss any aspect of a video game that strikes your fancy.  Maybe you really like the music or art direction, maybe there&rsquo;s one level that you could play over and over again until you get it perfect, maybe you really like the silent protagonist&rsquo;s haircut.  Let your club know.  Chances are, your thoughts about the video game will evoke some exciting input from others in your club.  You can respond with all those witty retorts you&rsquo;ve been practicing in the mirror.  This is what&rsquo;s known colloquially as a discussion.</p>

<p>But how do I know what to discuss, you ask?  It&rsquo;s simple.  <strong>Take turns picking a topical game that everyone can play</strong>, within reason.  We say within reason because, like a book club, everyone needn&rsquo;t finish the discussion material to weigh in.  Don&rsquo;t expect everyone in your club to buy the latest $60 game.</p>

<p>A rule of thumb can be that the host of the last meeting gets to choose the game for the next meeting.</p>

<h2>Who?</h2>

<p>You, your friends, the cat (If you have one. No catnapping.), <strong>anyone</strong> with interest in critically discussing video games. Maybe, like us, the group consists of people that are interested in game design. Maybe you invite your friends that love games, but haven’t ventured into the realm of formal discussion. The more the people you have with different interests, the more likely you are to get a new take on a game.</p>

<h2>When?</h2>

<p>Pick your favorite periodic adjective.  We&rsquo;d recommend starting with
<strong>monthly</strong> meetings, but you can meet as often as you like.  Really.
We don&rsquo;t mind.  See if we care.  It&rsquo;s not like you invited us.</p>

<p>Anyway. Pick a time that works best for your group.  Sometime in the evening, say around happy hour, with a delicious beverage and snacks sounds good to us.  We&rsquo;d reckon that allowing for <strong>two hours</strong> should be enough discussion.  If a topic is particularly engaging you can always spread it out over multiple meetings.</p>

<p>It&rsquo;s up to you to work out a schedule that works for your group.
<strong>Scheduling apps</strong> like <a href="http://doodle.com/">Doodle.com</a> can be helpful for coordinating busy
schedules and finding a time that works for everyone in your group.</p>

<h2>Where?</h2>

<p>In your <strong>home</strong>, in your friends' homes (assuming they&rsquo;re part of the meeting&#x2026;), in your garage, <strong>at a local pub</strong>.</p>

<p>It&rsquo;s nice to meet <strong>somewhere with a television</strong> and a <strong>game system</strong> to play the game you will discuss.  Showing video of your favorite parts of the game can be nice too.  If you want to do that, try to plan ahead and get a save near the part you want to discuss or check for video playthroughs on <a href="https://www.youtube.com/">YouTube</a>.</p>

<p>If you meet outside your home make sure you check with the establishment beforehand.  Give them a headcount and check if it&rsquo;s ok.  Be sure to spend a little scrilla and tip well.  Be aware of other customers.</p>

<h2>Why?</h2>

<p>Because <strong>video games deserve a critical reading</strong>.  Discussions force all of us to crystallize our views from vague notions of &ldquo;It&rsquo;s good,&rdquo; to &ldquo;The fog of war mechanic in this game vastly improves the strategic elements, strengthening the multiplayer meta-game.&rdquo;  (Your mileage may vary.)</p>

<p>Sometimes you&rsquo;ll get to suggest your favorite game.  Others may deride your choice, but they will get their chance too.  Heck someone may even like the games you suggest, discussing an intriguing aspect that was lost on you.  Then the others in your club will suggest other games.  You never know, you may just find a game that you like.  If you&rsquo;re anything like us, assigning a game and being accountable to comment on it can also help <a href="http://www.backloggery.com/">curb the constant growth of your Steam library</a>.</p>

<p>Maybe one month you&rsquo;ll find that you hated a game. But take a moment and think about why it isn&rsquo;t fun. Do you dislike it because you&rsquo;re bad at puzzle games, or is it unenjoyable because it&rsquo;s a garbage visual novel whose writer has never heard of the three act structure? These reasons are very different, and both are worth considering. We&rsquo;re hoping that reflecting on what makes a game good or bad will make us better designers. We do this with most games that we play, but by doing it with friends we can all get feedback on our thoughts; and we guarantee that will make us grow as designers.</p>

<p>What we&rsquo;ve presented here are a set of guidelines.  There are no hard and fast rules or requirements for hosting your own #VGBC.  Want to talk about knitting?  Cool.  Want to discuss your favorite sporting moments?  Great.  Board games?  Lawn darts?  More power to you.</p>

<p>So start up your own #VGBC and let us know how it goes in the comments or on the twitters <a href="http://twitter.com/zerosalife">@zerosalife</a> or <a href="http://twitter.com/involvingsalmon">@InvolvingSalmon</a>.  When I post about something from #VGBC on the blog, I&rsquo;ll tag it with <a href="http://zerosalife.github.io/blog/categories/vgbc/">VGBC</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Procjam review]]></title>
    <link href="http://zerosalife.github.io/blog/2014/11/29/procjam-review/"/>
    <updated>2014-11-29T09:33:47-06:00</updated>
    <id>http://zerosalife.github.io/blog/2014/11/29/procjam-review</id>
    <content type="html"><![CDATA[<p>Looking through the entries, I could only spend a minute or two with each entry.  It helped if the game ran in my browser, so HTML and Unity were big.  Here are some of the games that caught my eye.</p>

<!--more-->


<h2>The top two</h2>

<h2>JET/LAG</h2>

<p>Simple instructions: &ldquo;Click to move. Kill enemies by bashing them.&rdquo;  There may be little to <em><a href="http://svblm.itch.io/jet-lag">JET/LAG</a></em>, but its excellent stylish visuals set this entry apart for me.  A CRT-like distortion bends the corners of the screen complete with scrolling scan lines, while multi-colored text oscillates above a simple square.  The simple square is your character battering your way through procedurally generated maze-like levels.</p>

<p>There&rsquo;s no fancy art in this game, all the characters are made from simple shapes.  But that doesn&rsquo;t stop the graphics from impressing.  It&rsquo;s clear that <a href="https://twitter.com/JakeCataford">@JakeCataford</a> turned the juice up to 11, and it works.  The game feels great.</p>

<p>As a &ldquo;rogue-like like like&rdquo; you may expect it to be deviously hard, and you&rsquo;d be right.  But the controls are responsive and the enemies telegraph their moves, so you feel like you are learning something with each death.  <a href="https://twitter.com/JakeCataford">@JakeCataford</a> clearly understands some fundamentals of engaging game design and I&rsquo;m excited to see what&rsquo;s coming up next.</p>

<h2>DUNGEN [star]</h2>

<p>A multi-jam entry for <a href="http://itch.io/jam/procjam">#procjam</a>, <a href="http://itch.io/jam/paper-jam-1">#paperjam</a>, and <a href="http://7dfps.com/">#7dfps</a> by <a href="https://twitter.com/JctWood">@jctwood</a>, this first person shooter uses shuffling to generate a dynamic dungeon with each play-through.  I like the simplicity of the mechanics <a href="https://twitter.com/JctWood">@jctwood</a> has designed.  Stats on a 1-10 scale can be just as interesting as stats in the thousands.  There are even multiple skin options for the protagonist&rsquo;s hand.  That&rsquo;s more advanced than all three <em><a href="http://en.wikipedia.org/wiki/Doom_%2528series%2529">DOOM</a></em>s.</p>

<p>I think I&rsquo;m most interested in the literal realization of the procedural generation algorithm.  By shuffling the cards the procedural generation of the dungeon is clear both to designer and player, and this type of randomization has been used for many years in many games with standard and nonstandard sets of cards.  I&rsquo;m interested in seeing how this shuffling mechanic, both literal and metaphorical, can be leveraged to encourage new avenues of play in the future.  I can imagine tuning some aspects of a proc gen algorithm by exposing the contents to the player as a deck of cards, both literally as is typical in CCGs and other tabletop games and as a metaphor for abstraction of systems in a video game.</p>

<h2>Favorite games</h2>

<ul>
<li><a href="http://svblm.itch.io/jet-lag">JET/LAG</a>

<ul>
<li>Bump or get bumped.  Excellent style and great graphics.  Very
juicy!</li>
</ul>
</li>
<li><a href="http://lissar.itch.io/peregrin">Peregrin</a>

<ul>
<li>Beautiful.</li>
</ul>
</li>
<li><a href="http://entropyphi.itch.io/nauticalith">Nauticalith</a>

<ul>
<li>Simple, but really conveys a sense of scale.  Adding some mechanic
like dynamic wind that affects sailing could put this over the
top.</li>
</ul>
</li>
<li><a href="http://tfurmanskigmailcom.itch.io/forska-web-version">Forska</a>

<ul>
<li>Great shader.  Generate some <em><a href="http://wikipedia.com/wiki/Myst">Myst</a></em>-like puzzles and you&rsquo;ve got a game, here.</li>
</ul>
</li>
<li><a href="http://8-bit-ape.itch.io/infinity-explorer">Infinity Explorer</a>

<ul>
<li>Reminds me of <em><a href="http://en.wikipedia.org/wiki/Magic_Carpet_%28video_game%29">Magic Carpet</a></em>.</li>
</ul>
</li>
<li><a href="http://jctwood.itch.io/dungen">DUNGEN star</a>

<ul>
<li>Print and play games are great.</li>
</ul>
</li>
</ul>


<h2>Favorite generators</h2>

<ul>
<li><a href="http://nihilocrat.itch.io/nodemancer">http://nihilocrat.itch.io/nodemancer</a>

<ul>
<li>Interesting.  Will have to look more into it.  Now that I think
about it, this one deserves an honorable mention for favorite tool
of the jam.  I will revisit it in depth in a later post because the
generation algorithm looks like an idea I&rsquo;ve batted around in my
head.</li>
</ul>
</li>
<li><a href="http://diaspora-colonies.herokuapp.com/">http://diaspora-colonies.herokuapp.com/</a>

<ul>
<li>Useful and cool!  Check out <a href="http://ptychomancer.itch.io/diaspora">http://ptychomancer.itch.io/diaspora</a>
for some more background on this space colony generator.</li>
</ul>
</li>
<li><a href="http://eduardo.itch.io/procedural-fabrics">http://eduardo.itch.io/procedural-fabrics</a>

<ul>
<li>Clever tiling textures using diagonal lines that really break up
the patterns to make it more pleasing to the eye.</li>
</ul>
</li>
<li><a href="http://ibol17.itch.io/procedural-pixel-monsters">http://ibol17.itch.io/procedural-pixel-monsters</a>

<ul>
<li>Artistic style.  Simple color palette still allow for a variety of
expressive monsters. Interested in following up on the
procedural tree generation–looks great!</li>
</ul>
</li>
<li><a href="https://github.com/cutgarnetgames/gaia">https://github.com/cutgarnetgames/gaia</a>

<ul>
<li>Beautiful world generator with some source code worth digging
into.</li>
</ul>
</li>
<li><a href="http://gillianms.itch.io/hoopla">http://gillianms.itch.io/hoopla</a>

<ul>
<li>Really think there&rsquo;s something to explore in pixels-as-stitches
graphics.</li>
</ul>
</li>
<li><a href="http://aerique.itch.io/rocks-bitch">http://aerique.itch.io/rocks-bitch</a>

<ul>
<li>The pet rock generator I always wanted!</li>
</ul>
</li>
<li><a href="http://playcrafts.itch.io/palette-generator">http://playcrafts.itch.io/palette-generator</a>

<ul>
<li>Useful.</li>
</ul>
</li>
<li><a href="http://tccoxon.itch.io/dreamer">http://tccoxon.itch.io/dreamer</a>

<ul>
<li>Weird hybrid between an AI and a text adventure, but very
  creative and very cool.</li>
</ul>
</li>
<li><a href="http://itch.io/jam/procjam/rate/14026">http://itch.io/jam/procjam/rate/14026</a>

<ul>
<li>Great concept, but I need remedial lessons or a tutorial.  One to
revisit when I can really dig into it.</li>
</ul>
</li>
</ul>


<h2>Cool looking Windows games I couldn&rsquo;t play</h2>

<ul>
<li><a href="http://crabowitz.itch.io/key-geist">http://crabowitz.itch.io/key-geist</a>

<ul>
<li>Reminds me of <em><a href="http://en.wikipedia.org/wiki/The_Wonderful_101">Wonderful 101</a></em>–a game I haven&rsquo;t played, but probably should.  Something about the aesthetic of dozens of little flocking characters appeals to me.</li>
</ul>
</li>
<li><a href="http://caseportman.itch.io/riser">http://caseportman.itch.io/riser</a>

<ul>
<li>Looks like it controls well</li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[procjam comedown]]></title>
    <link href="http://zerosalife.github.io/blog/2014/11/22/procjam-comedown/"/>
    <updated>2014-11-22T13:26:16-06:00</updated>
    <id>http://zerosalife.github.io/blog/2014/11/22/procjam-comedown</id>
    <content type="html"><![CDATA[<p>Now that two weeks have passed (a geologic era in internet time), I&rsquo;m ready begin to look back on the <a href="https://twitter.com/hashtag/procjam">#procjam</a> talks and the entries to the jam that caught my eye.  I&rsquo;ve been very busy lately working on my own submissions <a href="http://zerosalife.github.io/blog/2014/11/08/insceptahdeckwu/">INSceptahdeckwu</a> and <a href="http://zerosalife.github.io/blog/2014/11/15/patchwerk/">Patchwerk</a>, among other commitments, so this is by no means an exhaustive look at everything in #procjam.</p>

<!--more-->


<p>Since I actually have no time at all to write a full retrospective, I&rsquo;ll have to be brief.  This post will have to serve as a collection of links and notes until I get a chance to look back in detail.  It&rsquo;s by no means complete, as I&rsquo;m still looking over all of the great entries to #procjam.  I enjoyed the interactions with the speakers and participants.  Unfortunately other commitments may occupy my time through the end of the year, so don&rsquo;t worry if the blogging is intermittent.  I&rsquo;ll revisit the #procjam talks and the submissions when I find time.</p>

<h2>Great ideas</h2>

<p><a href="https://twitter.com/PNJeffries/status/531592288733261824">https://twitter.com/PNJeffries/status/531592288733261824</a></p>

<p><a href="https://twitter.com/redblobgames/status/527485845616340992">https://twitter.com/redblobgames/status/527485845616340992</a></p>

<p><a href="https://twitter.com/mtthwcmpbll/status/527881936178778113">https://twitter.com/mtthwcmpbll/status/527881936178778113</a></p>

<p><a href="https://twitter.com/DragonXVI/status/531078933161476096/photo/1">https://twitter.com/DragonXVI/status/531078933161476096/photo/1</a></p>

<p><a href="https://twitter.com/TomNullpointer/status/531108417096916992">https://twitter.com/TomNullpointer/status/531108417096916992</a></p>

<p><a href="http://chrismwaite.github.io/procjam/">http://chrismwaite.github.io/procjam/</a></p>

<p><a href="https://github.com/chrismwaite/procjam/blob/gh-pages/app.js">https://github.com/chrismwaite/procjam/blob/gh-pages/app.js</a></p>

<p><a href="http://renderingpipeline.com/2013/01/adding-analog-inputs-to-your-graphics-app/">http://renderingpipeline.com/2013/01/adding-analog-inputs-to-your-graphics-app/</a></p>

<p><a href="https://github.com/keijiro/unity-midi-input">https://github.com/keijiro/unity-midi-input</a></p>

<p><a href="http://cgaudino.itch.io/tailgunner">http://cgaudino.itch.io/tailgunner</a></p>

<p><a href="https://github.com/civilframe/node-spacegame-ship-gen">https://github.com/civilframe/node-spacegame-ship-gen</a></p>

<p><a href="http://jctwood.itch.io/dungen">http://jctwood.itch.io/dungen</a></p>

<h2>Good tutorials</h2>

<p>Some tutorials I came across during the jam:</p>

<p><a href="http://procjam.tumblr.com/post/99689402659/procedural-generation-tutorials-getting-started">http://procjam.tumblr.com/post/99689402659/procedural-generation-tutorials-getting-started</a></p>

<p><a href="https://twitter.com/alexjc/status/531077005815869440">https://twitter.com/alexjc/status/531077005815869440</a></p>

<p><a href="http://samatkins.co.uk/blog/2014/11/08/procjam-procedural-building-generation/">http://samatkins.co.uk/blog/2014/11/08/procjam-procedural-building-generation/</a></p>

<h2>Talks</h2>

<p>Here are my notes on the talks that I had a chance to see.  In lieu of writing anything up, I&rsquo;ll post them here for now.</p>

<h3>Overall themes</h3>

<ul>
<li>Meaning over randomness</li>
<li>Scale and direction

<ul>
<li>Layering</li>
<li>Deck metaphor really nice for prototyping.</li>
<li>Great question, how do you make sure the player is not lost in
this huge history.  Player only aware of history of own house,
data is gathered by reading books etc.; there&rsquo;s some context for
the entrance of new bits of history.  Books are populated in
places where it makes sense for them to turn up.</li>
<li>Top-down (designer first) is easier than bottom-up (player first;
shout out to <a href="https://twitter.com/gillianmsmith">@gillianmsmith</a> for this formulation).  Callbacks?
How to percolate up from lower elements on tree?</li>
</ul>
</li>
<li>Storytelling as divination</li>
<li><a href="https://github.com/dariusk/NaNoGenMo">NaNoGenMo</a></li>
<li>Flow in procedural generation

<ul>
<li>Meaning, codifying design principlse</li>
<li><a href="http://artofgamedesign.com/">Art of Game Design by Jesse Schell</a></li>
<li>a feeling of complete and energized focus in an activity, with a
high level of enjoyment and fulfillment

<ul>
<li>clear goals</li>
<li>no distractions

<ul>
<li>How does this figure into open world distraction fests like
triple a sandbox games?</li>
</ul>
</li>
<li>feedback</li>
<li>continuously challenging</li>
</ul>
</li>
<li>Frustration vs. boredom, find a balance</li>
<li>Dynamic

<ul>
<li>Scale enemy level to meet player&rsquo;s level</li>
<li>AI director, see when the player is overwhelmed, drop difficulty;
boredom spawn more enemies.  Requires some kind of metric</li>
</ul>
</li>
<li>Static

<ul>
<li>Lock and key</li>
<li><a href="https://github.com/tcoxon/metazelda">Metazelda</a> calculates difficulty number for each room from desired flow curve.</li>
<li>Love <a href="https://github.com/tcoxon">@tcoxon</a> &rsquo;s thoughts on less backtracking.  Algorithmically respecting players' time.</li>
</ul>
</li>
<li><a href="http://www.gamasutra.com/blogs/ToniSala/20131208/206535/Game_Design_Theory_Applied_The_Flow_Channel.php">Gamasutra Toni Sala</a></li>
</ul>
</li>
<li>Emotion and interactivity &#x2013; expressivity

<ul>
<li>Workflow, ease of adjustment can be good for designer and exposing
the same tools to the player can be fun</li>
</ul>
</li>
</ul>


<h2>itch.io</h2>

<p>It looks like most of the entries are gathered on a <a href="http://itch.io/jam/procjam">#procjam itch.io page</a>.  I have no experience with <a href="http://itch.io/">itch.io</a>, but I think setting up an account and exploring what itch.io has to offer couldn&rsquo;t hurt.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[INSceptahdeckWU]]></title>
    <link href="http://zerosalife.github.io/blog/2014/11/08/insceptahdeckwu/"/>
    <updated>2014-11-08T08:28:39-06:00</updated>
    <id>http://zerosalife.github.io/blog/2014/11/08/insceptahdeckwu</id>
    <content type="html"><![CDATA[<h2>#procjam updates</h2>

<p><a href="https://twitter.com/search?q%3Dprocjam">#procjam</a> is upon us.  The conference is on and popping, streaming at <a href="http://www.twitch.tv/procjam">http://www.twitch.tv/procjam</a>.  I&rsquo;ll try to precede my #procjam posts with a little update on some of the cool things I&rsquo;ve seen that need pointing out during the jam itself.</p>

<p><a href="https://twitter.com/GalaxyKate">@GalaxyKate</a> will be streaming <a href="http://vimeo.com/111272682">some tutorials</a> today, following the conference.</p>

<p><a href="https://twitter.com/SudoRossy">@sudorossy</a> is currently streaming some development and modeling at <a href="http://www.twitch.tv/sudorossy">http://www.twitch.tv/sudorossy</a>.  I imagine that sudorossy will continue this throughout the jam.</p>

<p>The <a href="https://twitter.com/search?q%3D7dfps">#7dfps</a> jam is also going on this week.  So, I&rsquo;ve decided to release my third person procedural tweeter.  Or maybe it&rsquo;s a fourth person tweeter, third person once removed.</p>

<h2>Fourth-person tweets</h2>

<p>I&rsquo;m at it again, <a href="http://zerosalife.github.io/blog/2014/04/19/styx-ebooks/">making a twitter bot</a> like <a href="https://twitter.com/styx_ebooks">@styx_ebooks</a>.  Only this time it&rsquo;s in a completely different language and it&rsquo;s got a completely different corpus.  Corpus is a Latin way of saying text, in case you forgot.</p>

<!--more-->


<h2>Making the tweets</h2>

<p>The basic algorithm works like this.</p>

<p>The bot creates a huge textfile containing lyrics from Wu Tang Clan songs.  I trim away a lot of the information about verses and choruses, but I keep the punctuation because I like the sense of rhythm it creates.</p>

<p>Based on the relationship between the words in this corpus file, the bot builds a <a href="http://en.wikipedia.org/wiki/Markov_chain">markov process</a> to generate the text of the tweets.  To do so, the bot generates a transition matrix using <a href="https://github.com/Janiczek/markov">Janiczek&rsquo;s Clojure markov library</a>.  It then takes random walks through that matrix to produce a string of text with a similar relationship between words to the input lyrics corpus.</p>

<h2>Making it a command line app</h2>

<p>This is the first time I&rsquo;ve tried to make a command line application in Twitter.  Luckily there are some good tools out there.</p>

<p>I wondered how to deal with multiple options and inputs, and the good news is: it&rsquo;s just as easy as you&rsquo;d think.  You simply add conditionals to deal with the possible behaviors of your program.  The magic of <code>parse-opts</code> handles the rest.  Options with long names automatically become keys to the option dictionary, and if you&rsquo;ve marked them as a <code>:flag</code> you can depend on the truth-value to control the flow of your program.</p>

<p>You may think it&rsquo;s odd that I&rsquo;m using options instead of actions as in the <code>cli</code> example, but hey.  It&rsquo;s my program.  Your program can work the way you want it too.  I&rsquo;m going to make sure to document it so you can use the Rebel INS or build a twitter bot based on this code.</p>

<p>To build the app, I use <code>lein bin</code> from the command line.</p>

<p>I&rsquo;m interested in <a href="http://www.rkn.io/2014/02/06/clojure-cookbook-daemons/">daemonizing</a> the application.  That is to say, I&rsquo;m interested in turning it into a persistent process that runs in the background on my computer.  But for now, I&rsquo;ve set up a simple <a href="http://en.wikipedia.org/wiki/Cron">cron</a> script to tweet every few hours.</p>

<h2>Logging</h2>

<p>When I do tweets from the command line there&rsquo;s some dark magic going on that I don&rsquo;t understand.  Anyway it seems to invoke the <code>Log4j</code>, so I <a href="http://www.bahmanm.com/blogs/how-to-add-logging-to-a-clojure-project">set that up according to this blog post</a>.</p>

<h2>Markov chain text generation</h2>

<p>One of the quirks of the markov package I used is that it stops generating &lsquo;random walks&rsquo; when it reaches states that it has not been trained on.  As you can imagine when using imagery-rich, neologism-laden rap music, there are many words that occur once, even in a very large corpus.  Being unique is kind of a goal of the form, a fact reflected in <a href="http://en.wikipedia.org/wiki/Ol%2527_Dirty_Bastard">at least one alias</a>.</p>

<p>In order to make more realistic texts, it&rsquo;s common to increase the order of the transition matrix.  That is to say, to determine the probability for a following word from the prior two or more words.  However, given my idiosyncratic corpus, this leads the &lsquo;random walk&rsquo; algorithm to halt, giving me too few words in my output.</p>

<p>Interestingly, in this case, dialing back the order tends to lead to more rhyming and a few recognizable couplets, which I find kinda nice.</p>

<h2>Setting up the twitter account</h2>

<p>I ran into a problem getting an app set up for the bot&rsquo;s twitter account.  I am merely one person, and thus have need for merely one cell phone.  Since twitter requires a unique mobile number for authenticating apps, I was out of luck.  That is, until I found this <a href="http://dghubble.com/blog/posts/twitter-app-write-access-and-bots/">blog post showing how to use the same app on multiple bot clients</a>.</p>

<p>Faithful readers may remember my wildly popular, and yet still somehow deeply underrated, <a href="http://en.wikipedia.org/wiki/Bangsian_fantasy">Bangsian</a> fantasy bot, <a href="https://twitter.com/styx_ebooks">@styx_ebooks</a>.  Using <code>twurl</code> I was able to grant access to the <a href="https://twitter.com/styx_ebooks">@styx_ebooks</a> app credentials for the new bot.</p>

<h2>Moving on</h2>

<p>You can find the source code over on <a href="http://github.com/zerosalife/insceptahdeckwu">github.</a></p>

<p>Here&rsquo;s one of my favorite tweets so far:</p>

<p><div class='embed tweet'>Tweet could not be processed</div></p>

<p>From here the sky&rsquo;s the limit.  I could try analyzing the generated text to try to build lines or stanzas.  I could try to reorder words to reflect the syntax present from the transcription.  I could try to represent individual emcees with unique corpora.</p>
]]></content>
  </entry>
  
</feed>

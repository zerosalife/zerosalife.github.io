<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: design | zero's a life]]></title>
  <link href="http://zerosalife.github.io/blog/categories/design/atom.xml" rel="self"/>
  <link href="http://zerosalife.github.io/"/>
  <updated>2014-11-22T14:33:25-05:00</updated>
  <id>http://zerosalife.github.io/</id>
  <author>
    <name><![CDATA[zerosalife]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[procjam comedown]]></title>
    <link href="http://zerosalife.github.io/blog/2014/11/22/procjam-comedown/"/>
    <updated>2014-11-22T14:26:16-05:00</updated>
    <id>http://zerosalife.github.io/blog/2014/11/22/procjam-comedown</id>
    <content type="html"><![CDATA[<p>Now that two weeks have passed (a geologic era in internet time), I&rsquo;m ready begin to look back on the <a href="https://twitter.com/hashtag/procjam">#procjam</a> talks and the entries to the jam that caught my eye.  I&rsquo;ve been very busy lately working on my own submissions <a href="http://zerosalife.github.io/blog/2014/11/08/insceptahdeckwu/">INSceptahdeckwu</a> and <a href="http://zerosalife.github.io/blog/2014/11/15/patchwerk/">Patchwerk</a>, among other commitments, so this is by no means an exhaustive look at everything in #procjam.</p>

<!--more-->


<p>Since I actually have no time at all to write a full retrospective, I&rsquo;ll have to be brief.  This post will have to serve as a collection of links and notes until I get a chance to look back in detail.  It&rsquo;s by no means complete, as I&rsquo;m still looking over all of the great entries to #procjam.  I enjoyed the interactions with the speakers and participants.  Unfortunately other commitments may occupy my time through the end of the year, so don&rsquo;t worry if the blogging is intermittent.  I&rsquo;ll revisit the #procjam talks and the submissions when I find time.</p>

<h2>Great ideas</h2>

<p><a href="https://twitter.com/PNJeffries/status/531592288733261824">https://twitter.com/PNJeffries/status/531592288733261824</a></p>

<p><a href="https://twitter.com/redblobgames/status/527485845616340992">https://twitter.com/redblobgames/status/527485845616340992</a></p>

<p><a href="https://twitter.com/mtthwcmpbll/status/527881936178778113">https://twitter.com/mtthwcmpbll/status/527881936178778113</a></p>

<p><a href="https://twitter.com/DragonXVI/status/531078933161476096/photo/1">https://twitter.com/DragonXVI/status/531078933161476096/photo/1</a></p>

<p><a href="https://twitter.com/TomNullpointer/status/531108417096916992">https://twitter.com/TomNullpointer/status/531108417096916992</a></p>

<p><a href="http://chrismwaite.github.io/procjam/">http://chrismwaite.github.io/procjam/</a></p>

<p><a href="https://github.com/chrismwaite/procjam/blob/gh-pages/app.js">https://github.com/chrismwaite/procjam/blob/gh-pages/app.js</a></p>

<p><a href="http://renderingpipeline.com/2013/01/adding-analog-inputs-to-your-graphics-app/">http://renderingpipeline.com/2013/01/adding-analog-inputs-to-your-graphics-app/</a></p>

<p><a href="https://github.com/keijiro/unity-midi-input">https://github.com/keijiro/unity-midi-input</a></p>

<p><a href="http://cgaudino.itch.io/tailgunner">http://cgaudino.itch.io/tailgunner</a></p>

<p><a href="https://github.com/civilframe/node-spacegame-ship-gen">https://github.com/civilframe/node-spacegame-ship-gen</a></p>

<p><a href="http://jctwood.itch.io/dungen">http://jctwood.itch.io/dungen</a></p>

<h2>Good tutorials</h2>

<p>Some tutorials I came across during the jam:</p>

<p><a href="http://procjam.tumblr.com/post/99689402659/procedural-generation-tutorials-getting-started?utm_content%3Dbuffera3b27&amp;utm_medium%3Dsocial&amp;utm_source%3Dtwitter.com&amp;utm_campaign%3Dbuffer">&lt;http://procjam.tumblr.com/post/99689402659/procedural-generation-tutorials-getting-started?utm_content=buffera3b27&amp;utm_medium=social&amp;utm_source=twitter.com&amp;utm_campaign=buffer></a></p>

<p><a href="https://twitter.com/alexjc/status/531077005815869440">https://twitter.com/alexjc/status/531077005815869440</a></p>

<p><a href="http://samatkins.co.uk/blog/2014/11/08/procjam-procedural-building-generation/">http://samatkins.co.uk/blog/2014/11/08/procjam-procedural-building-generation/</a></p>

<h2>Talks</h2>

<p>Here are my notes on the talks that I had a chance to see.  In lieu of writing anything up, I&rsquo;ll post them here for now.</p>

<h3>Overall themes</h3>

<ul>
<li>Meaning over randomness</li>
<li>Scale and direction

<ul>
<li>Layering</li>
<li>Deck metaphor really nice for prototyping.</li>
<li>Great question, how do you make sure the player is not lost in
this huge history.  Player only aware of history of own house,
data is gathered by reading books etc.; there&rsquo;s some context for
the entrance of new bits of history.  Books are populated in
places where it makes sense for them to turn up.</li>
<li>Top-down (designer first) is easier than bottom-up (player first;
shout out to <a href="https://twitter.com/gillianmsmith">@gillianmsmith</a> for this formulation).  Callbacks?
How to percolate up from lower elements on tree?</li>
</ul>
</li>
<li>Storytelling as divination</li>
<li>NanoGenMo</li>
<li>Flow in procedural generation

<ul>
<li>Meaning, codifying design principlse</li>
<li>Art of Game Design by Jesse Schell</li>
<li>a feeling of complete and energized focus in an activity, with a
high level of enjoyment and fulfillment

<ul>
<li>clear goals</li>
<li>no distractions

<ul>
<li>How does this figure into open world distraction fests like
triple a sandbox games?</li>
</ul>
</li>
<li>feedback</li>
<li>continuously challenging</li>
</ul>
</li>
<li>Frustration vs. boredom, find a balance</li>
<li>Dynamic

<ul>
<li>Scale enemy level to meet player&rsquo;s level</li>
<li>AI director, see when the player is overwhelmed, drop difficulty;
boredom spawn more enemies.  Requires some kind of metric</li>
</ul>
</li>
<li>Static

<ul>
<li>Lock and key</li>
<li>Metazelda calculates difficulty number for each room from
desired flow curve.</li>
<li>Love <a href="https://github.com/tcoxon">@tcoxon</a> &rsquo;s thoughts on less backtracking.  Algorithmically respecting players' time.</li>
</ul>
</li>
<li>Gamasutra Toni Sala</li>
</ul>
</li>
<li>Emotion and interactivity &#x2013; expressivity

<ul>
<li>Workflow, ease of adjustment can be good for designer and exposing
the same tools to the player can be fun</li>
</ul>
</li>
</ul>


<h2>itch.io</h2>

<p>It looks like most of the entries are gathered on a <a href="http://itch.io/jam/procjam">#procjam itch.io page</a>.  I have no experience with <a href="http://itch.io/">itch.io</a>, but I think setting up an account and exploring what itch.io has to offer couldn&rsquo;t hurt.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[INSceptahdeckWU]]></title>
    <link href="http://zerosalife.github.io/blog/2014/11/08/insceptahdeckwu/"/>
    <updated>2014-11-08T09:28:39-05:00</updated>
    <id>http://zerosalife.github.io/blog/2014/11/08/insceptahdeckwu</id>
    <content type="html"><![CDATA[<h2>#procjam updates</h2>

<p><a href="https://twitter.com/search?q%3Dprocjam">#procjam</a> is upon us.  The conference is on and popping, streaming at <a href="http://www.twitch.tv/procjam">http://www.twitch.tv/procjam</a>.  I&rsquo;ll try to precede my #procjam posts with a little update on some of the cool things I&rsquo;ve seen that need pointing out during the jam itself.</p>

<p><a href="https://twitter.com/GalaxyKate">@GalaxyKate</a> will be streaming <a href="http://vimeo.com/111272682">some tutorials</a> today, following the conference.</p>

<p><a href="https://twitter.com/SudoRossy">@sudorossy</a> is currently streaming some development and modeling at <a href="http://www.twitch.tv/sudorossy">http://www.twitch.tv/sudorossy</a>.  I imagine that sudorossy will continue this throughout the jam.</p>

<p>The <a href="https://twitter.com/search?q%3D7dfps">#7dfps</a> jam is also going on this week.  So, I&rsquo;ve decided to release my third person procedural tweeter.  Or maybe it&rsquo;s a fourth person tweeter, third person once removed.</p>

<h2>Fourth-person tweets</h2>

<p>I&rsquo;m at it again, <a href="http://zerosalife.github.io/blog/2014/04/19/styx-ebooks/">making a twitter bot</a> like <a href="https://twitter.com/styx_ebooks">@styx_ebooks</a>.  Only this time it&rsquo;s in a completely different language and it&rsquo;s got a completely different corpus.  Corpus is a Latin way of saying text, in case you forgot.</p>

<!--more-->


<h2>Making the tweets</h2>

<p>The basic algorithm works like this.</p>

<p>The bot creates a huge textfile containing lyrics from Wu Tang Clan songs.  I trim away a lot of the information about verses and choruses, but I keep the punctuation because I like the sense of rhythm it creates.</p>

<p>Based on the relationship between the words in this corpus file, the bot builds a <a href="http://en.wikipedia.org/wiki/Markov_chain">markov process</a> to generate the text of the tweets.  To do so, the bot generates a transition matrix using <a href="https://github.com/Janiczek/markov">Janiczek&rsquo;s Clojure markov library</a>.  It then takes random walks through that matrix to produce a string of text with a similar relationship between words to the input lyrics corpus.</p>

<h2>Making it a command line app</h2>

<p>This is the first time I&rsquo;ve tried to make a command line application in Twitter.  Luckily there are some good tools out there.</p>

<p>I wondered how to deal with multiple options and inputs, and the good news is: it&rsquo;s just as easy as you&rsquo;d think.  You simply add conditionals to deal with the possible behaviors of your program.  The magic of <code>parse-opts</code> handles the rest.  Options with long names automatically become keys to the option dictionary, and if you&rsquo;ve marked them as a <code>:flag</code> you can depend on the truth-value to control the flow of your program.</p>

<p>You may think it&rsquo;s odd that I&rsquo;m using options instead of actions as in the <code>cli</code> example, but hey.  It&rsquo;s my program.  Your program can work the way you want it too.  I&rsquo;m going to make sure to document it so you can use the Rebel INS or build a twitter bot based on this code.</p>

<p>To build the app, I use <code>lein bin</code> from the command line.</p>

<p>I&rsquo;m interested in <a href="http://www.rkn.io/2014/02/06/clojure-cookbook-daemons/">daemonizing</a> the application.  That is to say, I&rsquo;m interested in turning it into a persistent process that runs in the background on my computer.  But for now, I&rsquo;ve set up a simple <a href="http://en.wikipedia.org/wiki/Cron">cron</a> script to tweet every few hours.</p>

<h2>Logging</h2>

<p>When I do tweets from the command line there&rsquo;s some dark magic going on that I don&rsquo;t understand.  Anyway it seems to invoke the <code>Log4j</code>, so I <a href="http://www.bahmanm.com/blogs/how-to-add-logging-to-a-clojure-project">set that up according to this blog post</a>.</p>

<h2>Markov chain text generation</h2>

<p>One of the quirks of the markov package I used is that it stops generating &lsquo;random walks&rsquo; when it reaches states that it has not been trained on.  As you can imagine when using imagery-rich, neologism-laden rap music, there are many words that occur once, even in a very large corpus.  Being unique is kind of a goal of the form, a fact reflected in <a href="http://en.wikipedia.org/wiki/Ol%2527_Dirty_Bastard">at least one alias</a>.</p>

<p>In order to make more realistic texts, it&rsquo;s common to increase the order of the transition matrix.  That is to say, to determine the probability for a following word from the prior two or more words.  However, given my idiosyncratic corpus, this leads the &lsquo;random walk&rsquo; algorithm to halt, giving me too few words in my output.</p>

<p>Interestingly, in this case, dialing back the order tends to lead to more rhyming and a few recognizable couplets, which I find kinda nice.</p>

<h2>Setting up the twitter account</h2>

<p>I ran into a problem getting an app set up for the bot&rsquo;s twitter account.  I am merely one person, and thus have need for merely one cell phone.  Since twitter requires a unique mobile number for authenticating apps, I was out of luck.  That is, until I found this <a href="http://dghubble.com/blog/posts/twitter-app-write-access-and-bots/">blog post showing how to use the same app on multiple bot clients</a>.</p>

<p>Faithful readers may remember my wildly popular, and yet still somehow deeply underrated, <a href="http://en.wikipedia.org/wiki/Bangsian_fantasy">Bangsian</a> fantasy bot, <a href="https://twitter.com/styx_ebooks">@styx_ebooks</a>.  Using <code>twurl</code> I was able to grant access to the <a href="https://twitter.com/styx_ebooks">@styx_ebooks</a> app credentials for the new bot.</p>

<h2>Moving on</h2>

<p>You can find the source code over on <a href="http://github.com/zerosalife/insceptahdeckwu">github.</a></p>

<p>Here&rsquo;s one of my favorite tweets so far:</p>

<p><div class='embed tweet'>Tweet could not be processed</div></p>

<p>From here the sky&rsquo;s the limit.  I could try analyzing the generated text to try to build lines or stanzas.  I could try to reorder words to reflect the syntax present from the transcription.  I could try to represent individual emcees with unique corpora.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Play balance for party vs in-depth fighting games]]></title>
    <link href="http://zerosalife.github.io/blog/2014/10/18/play-balance-for-party-vs-in-depth-fighting-games/"/>
    <updated>2014-10-18T11:33:31-04:00</updated>
    <id>http://zerosalife.github.io/blog/2014/10/18/play-balance-for-party-vs-in-depth-fighting-games</id>
    <content type="html"><![CDATA[<p>Here I&rsquo;m drawing a comparison between games that are subjectively perceived as party games and games that are more in-depth.  I&rsquo;m avoiding using loaded terms like casual and hardcore, but I think the distinction is likely the same.  Both types of games can be complex, but subtle balancing issues can affect the subjective sense of fun when playing these games.</p>

<p>For discussion I&rsquo;m going to focus on relatively advanced moves in <em><a href="http://www.smashbros.com">Super Smash Bros.</a></em> and <em><a href="http://www.towerfall-game.com/">TowerFall</a></em>: L-canceling and dodge canceling, respectively.  I was inspired to examine this balance issue by a recent tweet by <em>TowerFall</em> creator, and, in the interest of full disclosure, my close personal 3DS friend, <a href="https://twitter.com/MattThorson">@MattThorson</a>.</p>

<p><div class='embed tweet'>Tweet could not be processed</div></p>

<!--more-->


<p>Thorson previously pointed out an interesting <a href="https://twitter.com/DamianSommer/status/519537228582633473">discussion</a> on the mechanic of L-canceling by <a href="https://twitter.com/DamianSommer/status/519537228582633473">@DamianSommer</a> among others. Sommer wants to focus on how the L-canceling mechanic reflects the design intent of the creators of <em>Super Smash Bros.</em></p>

<p><div class='embed tweet'>Tweet could not be processed</div></p>

<p><a href="https://twitter.com/Sonic9jct">@Sonic9jct</a> highlights the dichotomy that I am exploring here.</p>

<p><div class='embed tweet'>Tweet could not be processed</div></p>

<p><a href="http://supersmashbros.wikia.com/wiki/L-canceling">L-canceling</a> requires extremely precise timing of inputs when the character is in a particular state.  You must press L within 6 frames of landing on the ground while performing an <a href="http://supersmashbros.wikia.com/wiki/Aerial_attack">aerial attack</a>.  Since <em>Super Smash Bros.</em> runs at 60 frames per second, this requires you to press the button within 100 milliseconds of hitting the ground.  To put this in perspective, the average human reaction time is about 250 milliseconds.</p>

<p><a href="https://twitter.com/whatisian">@whatisian</a> brilliantly captures the distinction in design that makes this a more difficult, in-depth, technically demanding mechanic.  If there is no drawback, then the execution of the L-cancel is practically mandatory at high levels of play.</p>

<p><div class='embed tweet'>Tweet could not be processed</div></p>

<p>Let&rsquo;s look at how this differs from <a href="http://steamcommunity.com/sharedfiles/filedetails/?id%3D250779585">dodge canceling</a> in <em>TowerFall</em> a game that Thorson intentionally designed to be welcoming to new players, while still keeping them competitive with skilled players.</p>

<p>Dodge canceling requires similarly herculean inputs to pull off, to perform a dodge cancel you must press the dodge button a second time after initiating a dodge maneuver.  The dodge lasts 367 milliseconds or 22 frames at 60 fps.  This seems like a lot of time to perform the dodge cancel compared to the scant 6 frames for an L-cancel, but there&rsquo;s a catch.  In order to get the most momentum, to carry the most speed through the dodge cancel, you must perform the move on exactly the right frame.</p>

<p>Sounds pretty tough, right?  If you think this would require some impressive technical skills to pull it off, you&rsquo;re right.  But there&rsquo;s a catch, turning or firing from the dodge cancel reduces the character&rsquo;s speed, making the character an easier target.</p>

<p>Thorson&rsquo;s mechanic provides a similar advantage to L-canceling with the addition of the risk of failure.  Dodge cancels could allow the player to zing around the level at will, firing arrows every which way, but Thorson decided to introduce drawbacks for imprecise play that create risks for more advanced players to put them closer to parity with less skilled players.</p>

<p><div class='embed tweet'>Tweet could not be processed</div></p>

<p>These are just my thoughts on this interesting discussion.  I&rsquo;m not a high-level player of either of these games, so I may have missed some of the subtleties to which Thorson or others refer.  If you think I&rsquo;m off the mark, or you just want to weigh in on the merits of designing for &ldquo;party&rdquo; vs. &ldquo;fighting&rdquo; games, drop me a line in the comments or on <a href="https://twitter.com/zerosalife">twitter</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Do ethics matter in game design?]]></title>
    <link href="http://zerosalife.github.io/blog/2014/10/04/do-ethics-matter-in-game-design/"/>
    <updated>2014-10-04T12:38:33-04:00</updated>
    <id>http://zerosalife.github.io/blog/2014/10/04/do-ethics-matter-in-game-design</id>
    <content type="html"><![CDATA[<p>I reached out on twitter in a somewhat misguided appeal to #gamedev, asking whether devs consider ethics when designing games.  Apparently there is so much traffic on #gamedev that any tweet will be lost in a deluge of announcements and automated bot retweets.  Oh well, I thought, I&rsquo;ll go it alone.  Given the <a href="http://bits.blogs.nytimes.com/2014/10/02/intel-pulls-ads-from-site-after-gamergate-boycott/">recent tone in the communities surrounding games</a>, I feel the need to examine this question: <strong>Do ethics matter in game design?</strong></p>

<!--more-->


<p>I&rsquo;m interested in the question of whether game designers should consider the ethical and moral implications of the game, product, or artifact that they are creating.</p>

<p>Full disclosure: I should state here that I&rsquo;m not smart enough of or trained well enough to think about these sorts of things.  So I&rsquo;ve appealed to <a href="http://innovate.ucsb.edu/wp-content/uploads/2010/02/Winner-Do-Artifacts-Have-Politics-1980.pdf">an article by Langdon Winner called <em>Do Artifacts Have Politics?</em></a>, which I will summarize here.</p>

<p>My overall thesis is that the things that game designers create carry intentional messages that should reflect the morals and ethics with which the game designers are comfortable.  In other words, I&rsquo;m arguing that game design should be conducted in an ethical manner.  I don&rsquo;t always think that this should necessarily <strong>restrict</strong> design, but I do think this easily neglected aspect of design matters.</p>

<p>Let&rsquo;s be clear here, art and artifacts that are designed are still art, and I&rsquo;m not advocating for some sort of restriction on artistic ideaspace and expression.  What I am trying to do is increase awareness, without necessarily coming to prescriptive conclusions.</p>

<h2>Do Artifacts Have Politics?</h2>

<p>According to the article &ldquo;there is no idea more provocative than the notion that technical things have political qualities.&rdquo;  The main focus of the article is whether &ldquo;machines, structures, and systems of modern material culture,&rdquo; the <strong>artifacts</strong> in question, should be &ldquo;judged not only for their contributions of efficiency and productivity&hellip;but also for the ways in which they can embody specific forms of power and authority.&rdquo;  Winner deals primarily with the environmental and public health issues from rapid modernization and industrialization in the 20th century, challenging the assumption that development and innovation (especially that of scientific investigation) will drive inexorably toward improved circumstance.</p>

<p>I&rsquo;m not as interested in the focus of the article as I am in the thesis it applies.  I&rsquo;d like to argue, with help from Langdon Winner, that games, objects of art designed by game designers, do embody, and in fact reinforce, specific types of power and authority.  As far as the prescriptive moral obligations I outlined in my earlier thesis statement, we&rsquo;ll have to see about that when we get there.  Offering guidelines may be out of the scope of this blog post.</p>

<p>Before you press the submit button on a hasty naysaying screed, Winner acknowledges, &ldquo;We all know that people have politics, not things.&rdquo;  Although, I would argue that in the age of Citizens United, fewer people would be so quick to judge the contention that constructed objects have politics as mistaken.</p>

<p>Winner highlights an overt case of expressing politics through technological systems in which the master builder of roads in a New York city designed overpasses that were too low to allow public transit buses to pass.  Winner cites evidence from a biography of the designer, indicating that these designs were predicated on &ldquo;social-class bias and racial prejudice.&rdquo;  Here we see an example of a technology that on the surface appears designed, albeit poorly, in a neutral manner.  However, when the underlying motivations are revealed, it becomes clear that the design technological system had an express political purpose and political consequences.</p>

<p>So, it&rsquo;s clear that any technological system can, in Winner&rsquo;s words, &ldquo;be used in ways that enhance the power, authority, and privilege of some over others&rdquo;.  These underlying politics of the system can produce a particular set of consequences without any particular user imposing a set of ideals through the application of the technology.  Winner sums up the need to consider these underlying politics well in the following excerpt:</p>

<blockquote><p>If our moral and political language for evaluating technology includes
only categories having to do with tools and uses, if it does not
include attention to the meaning of the designs and arrangements of
our artifacts, then we will be blinded to much that is intellectually
and practically crucial.</p></blockquote>

<h2>Consequences of design</h2>

<p>When creating a technological thing, Winner identifies two sets of choices that confront the designer with regard to how the technology &ldquo;can affect the relative distribution of power, authority, and privilege in a community&rdquo;.  First is simply do or don&rsquo;t: will you design the thing or won&rsquo;t you?  Second, how will you design specific aspects of the technology?</p>

<p>Winner highlights specific technologies that arguably may have been better for the social fabric had they not been designed.  It&rsquo;s difficult to support Winner&rsquo;s argument here in a general sense, but I see one important lesson for the designer.  Winner talks about criticisms about designers attempting to design politically just systems as idealistic: &ldquo;Whatever claims one may wish to make on behalf of liberty, justice, or equality can be immediately neutralized when confronted with arguments to the effect: &lsquo;Fine, but that&rsquo;s no way to run a railroad&rsquo; (or a steel mill, or airline, or communications system, and so on).&rdquo;  I&rsquo;ll add here, superfluously, that of course this applies to video games as well.</p>

<h2>Own your art</h2>

<p>Like Winner, I hesitate to draw any hard and fast prescriptive conclusions on what should or shouldn&rsquo;t be designed.  There will always be subjective opinion on the political nature of the things that game designers design.</p>

<p>The important thing is for you as the designer of a thing to be aware of the choices, implicit and explicit, that surround your creation.  That sounds kind of <a href="https://www.youtube.com/watch?v%3Dxos2MnVxe-c">Frankenstein-ish</a>, doesn&rsquo;t it?  What I mean is, <strong>own your art</strong>.  Design things that you feel comfortable with.</p>

<p>When the designers of <a href="http://kotaku.com/ubisoft-responds-to-assassins-creed-female-character-co-1589413130">a triple-A game</a> say they can&rsquo;t implement a female 3d model for the main character, they avow a political position in the design of their technological thing.  They should own up to the consequences of that design choice, including all of the ethical and political ramifications.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Designing a pachinko RPG]]></title>
    <link href="http://zerosalife.github.io/blog/2014/08/23/designing-a-pachinko-rpg/"/>
    <updated>2014-08-23T11:48:48-04:00</updated>
    <id>http://zerosalife.github.io/blog/2014/08/23/designing-a-pachinko-rpg</id>
    <content type="html"><![CDATA[<p>What would make a pachinko RPG?  <a href="http://zerosalife.github.io/blog/2014/08/16/one-tap-quest-a-pachinko-rpg/">Last week</a>, I wrote about how I&rsquo;m sort of enamored with <em><a href="http://shimage.net/one-tap-quest/">One Tap Quest&rsquo;s</a></em> tap-and-let-them-go interaction, which I think mirrors the play-style of pachinko.  In pachinko, you have some control over launching the little metal balls, but once they&rsquo;re in play, they&rsquo;re on their own.  This mechanism stands in contrast to pinball, where you interact with a single or multiple pinballs with the paddles, and cue sports (especially bumper pool), where you launch a billiard ball repeatedly with a cue.</p>

<p>As I said last week, I think the basic gameplay in <em>One Tap Quest</em> is interesting enough for a 10-minute session.  But I&rsquo;d like to take this concept and run with it, if you&rsquo;ll let me.  What follows are some concepts that, I think, extend the <em>One Tap Quest</em> pachinko RPG model.</p>

<h2>Player characters</h2>

<p>As I conceive of it, a pachinko RPG is sort of like <em><a href="http://en.wikipedia.org/wiki/The_Wonderful_101">Wonderful 101</a></em>.  A changing stock of characters go up against an overwhelming group of enemies.  Just like pachinko rewards players with more pachinko balls, worth real money, a pachinko RPG would need to reward the player with ever more&mdash;and ever more interesting&mdash;characters to bolster the stock and the player&rsquo;s score.  A given character can gain levels when unleashed on the board, a little more unique than generic pachinko balls.  Perhaps characters added to the stock later in the game come at a higher starting level, sort of like characters recruited in later sections of <em><a href="http://en.wikipedia.org/wiki/Final_Fantasy_Tactics">Final Fantasy Tactics</a></em> or <em><a href="http://en.wikipedia.org/wiki/Ogre_Battle:_The_March_of_the_Black_Queen">Ogre Battle</a></em>.</p>

<h2>Environment</h2>

<p>Procedurally generated &ldquo;boards&rdquo; could make a game interesting.  Presenting a variable layout of enemies, terrain, and power-ups can challenge players who are already familiar with the basic gameplay.  I don&rsquo;t think that using roguelike elements, such as varying the effects of power-ups like potions in <em><a href="http://www.nethack.org/">Nethack</a></em> would work very well.  However, incorporating a quest or narrative adventure framework above the level of boards could be engaging.  Here I&rsquo;m using the word level to refer to a conceptual level of hierarchical relationships, rather than an experience level or a stage in a game.  I&rsquo;m talking about the approach that <em><a href="http://www.ftlgame.com/">FTL</a></em> and the built-in 3DS RPG, <em><a href="http://nintendo.wikia.com/wiki/Find_Mii_%283DS%29">Find Mii</a></em>, take.  Each &ldquo;board&rdquo; is a gameplay experience in itself, and the &ldquo;boards&rdquo; have a larger (in terms of conceptual scope) map that ties them together and gives the player a sense of progression or quest completion.</p>

<p>Obstacles on the &ldquo;boards&rdquo; that impair the movement of either player characters or enemies could add another layer of strategy.  In effect these terrain elements could construct a puzzle that they player has to solve by starting their player character down the correct &ldquo;lane&rdquo;, and being lucky enough to gain the required number of levels to beat the &ldquo;board&rdquo;.</p>

<p>This approach to using obstacles to make puzzles would require some clever level design.  A puzzle where there is a single right way to complete it would be boring, once you find it you simply wait until you get the required number of levels through sheer luck&mdash;pointless repetition without interesting choices.  However puzzles where there are (or seem to be) multiple routes to complete the &ldquo;board&rdquo; can be interesting.</p>

<h2>Interaction</h2>

<p>I think it might be cool to maintain control over the character after you launch.  In a sense you would be an invisible hand, maintaining control over the pachinko ball as it rolls through the machine.  This game would be sort of like an inverted bullet-hell shoot &lsquo;em up.  Rather than dodging enemies, you would guide your character toward them.  It is probably worth iterating on this mechanic, because <em><a href="http://zh.monst.wikia.com/wiki/Monster_Strike_%E7%BB%B4%E5%9F%BA">Monster Strike</a></em> seems to use it with relative success.  But I think maintaining control over the character would block out the cheering-your-character-on-from-the-sidelines aspect that I enjoyed in One Tap Quest, and would like to emulate.</p>

<h2>Enemies</h2>

<p>As I mentioned previously, added depth of enemy behavior and power-ups could prolong the experience.  I&rsquo;m not sure exactly what this would entail at this point, but I think iterating on the basic concepts laid out in <em>One Tap Quest</em> could lead to some interesting variation.  That sentence pretty much sums up my take on what would make an interesting pachinko RPG.  Thanks for letting me spew some thoughts that are little more than design notes.</p>
]]></content>
  </entry>
  
</feed>

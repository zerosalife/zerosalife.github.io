<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: procjam | zero's a life]]></title>
  <link href="http://zerosalife.github.io/blog/categories/procjam/atom.xml" rel="self"/>
  <link href="http://zerosalife.github.io/"/>
  <updated>2015-08-15T09:06:49-05:00</updated>
  <id>http://zerosalife.github.io/</id>
  <author>
    <name><![CDATA[zerosalife]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[A proper review of DUNGEN [Star]]]></title>
    <link href="http://zerosalife.github.io/blog/2014/12/06/a-proper-review-of-dungen-star/"/>
    <updated>2014-12-06T09:44:36-06:00</updated>
    <id>http://zerosalife.github.io/blog/2014/12/06/a-proper-review-of-dungen-star</id>
    <content type="html"><![CDATA[<p><em>My green fingers sweat on the handle of my pistol as I creep through the door, into the next room.  I found two boxes of ammunition in the previous room so I&rsquo;m well equipped for the next horrible monster I encounter.  My grip on the pistol tightens as a horrible three-legged spherical thing jumps down from the ceiling, pirouetting to land on its feet and shooting a stream of acidic liquid at me.</em></p>

<p><em>&ldquo;Oof,&rdquo; is all I manage to get out, as I feel the Burster&rsquo;s fluid eat into my skin.  Without thinking I fire at it, killing the thing in two shots.</em></p>

<p><em>While reloading my pistol, I notice a glowing jewel on the stone.  If it&rsquo;s what the briefings said, this is the teleport stone that will allow me to phase out of our normal reality just long enough to escape the next deadly monster I encounter in</em> DUNGEN [Star].</p>

<!--more-->


<p><a href="/images/assets/DUNGENStar.gif"><img class="center" src="/images/assets/DUNGENStar.gif"></a></p>

<p>(Please excuse my lame attempt at illustrating play with a .gif).</p>

<p><a href="http://zerosalife.github.io/blog/2014/11/29/procjam-review/">Last week, I posted an overview of my favorite #procjam games</a>.  I felt remissed when I got a tweet from the designer, asking whether I had actually printed and played the game.  I hadn&rsquo;t and neither had any of the other reviewers who praised it.  So, this week I took some time to cut out the cards on my computer, effectively making a print-and-play game I could play in Illustrator without bothering to print it out.</p>

<p>After the initial time investment, <em><a href="http://jctwood.itch.io/dungen">DUNGEN [Star]</a></em>, a print-and-play game designed by <a href="https://twitter.com/JctWood">@JctWood</a> for the <a href="https://twitter.com/hashtag/paperjam">#paperjam</a>, <a href="https://twitter.com/hashtag/procjam">#procjam</a>, and <a href="https://twitter.com/hashtag/7dfps">#7dfps</a> gamejams, plays quickly.  Especially if you are brave enough to choose the roguelike secret difficulty level of starting with 1HP.  Add to that, the advanced enemy rules, which give the monsters more personality on top of their already evocative illustrations and you&rsquo;ve got a challenging game.</p>

<p>I&rsquo;m a fan of the cartoonish art style of <em>DUNGEN [Star]</em>.  The character design does a good job of communicating interesting variety, even though there are few monsters to go up against.</p>

<p><em>DUNGEN [Star]</em> runs out of steam quickly, but I think the intent behind it is clear.  This game does a good job of bringing the feel of a procedural first-person shooter with roguelike elements to the print-and-play market.  I think extending the combat to involve multiple weapons would add some depth to the game.  I would like to see more enemies, particularly ones with more interesting advanced enemy rules.  I&rsquo;d also like to see an overarching goal or theme tying together <em>DUNGEN [Star]</em>&rsquo;s dungeoning and star, so you feel more satisfied when you survive the dungeon.  With that criticism said, I still think <em>DUNGEN [Star]</em> succeeds as a gamejam game and a great prototype from which to build.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Procjam review]]></title>
    <link href="http://zerosalife.github.io/blog/2014/11/29/procjam-review/"/>
    <updated>2014-11-29T09:33:47-06:00</updated>
    <id>http://zerosalife.github.io/blog/2014/11/29/procjam-review</id>
    <content type="html"><![CDATA[<p>Looking through the entries, I could only spend a minute or two with each entry.  It helped if the game ran in my browser, so HTML and Unity were big.  Here are some of the games that caught my eye.</p>

<!--more-->


<h2>The top two</h2>

<h2>JET/LAG</h2>

<p>Simple instructions: &ldquo;Click to move. Kill enemies by bashing them.&rdquo;  There may be little to <em><a href="http://svblm.itch.io/jet-lag">JET/LAG</a></em>, but its excellent stylish visuals set this entry apart for me.  A CRT-like distortion bends the corners of the screen complete with scrolling scan lines, while multi-colored text oscillates above a simple square.  The simple square is your character battering your way through procedurally generated maze-like levels.</p>

<p>There&rsquo;s no fancy art in this game, all the characters are made from simple shapes.  But that doesn&rsquo;t stop the graphics from impressing.  It&rsquo;s clear that <a href="https://twitter.com/JakeCataford">@JakeCataford</a> turned the juice up to 11, and it works.  The game feels great.</p>

<p>As a &ldquo;rogue-like like like&rdquo; you may expect it to be deviously hard, and you&rsquo;d be right.  But the controls are responsive and the enemies telegraph their moves, so you feel like you are learning something with each death.  <a href="https://twitter.com/JakeCataford">@JakeCataford</a> clearly understands some fundamentals of engaging game design and I&rsquo;m excited to see what&rsquo;s coming up next.</p>

<h2>DUNGEN [star]</h2>

<p>A multi-jam entry for <a href="http://itch.io/jam/procjam">#procjam</a>, <a href="http://itch.io/jam/paper-jam-1">#paperjam</a>, and <a href="http://7dfps.com/">#7dfps</a> by <a href="https://twitter.com/JctWood">@jctwood</a>, this first person shooter uses shuffling to generate a dynamic dungeon with each play-through.  I like the simplicity of the mechanics <a href="https://twitter.com/JctWood">@jctwood</a> has designed.  Stats on a 1-10 scale can be just as interesting as stats in the thousands.  There are even multiple skin options for the protagonist&rsquo;s hand.  That&rsquo;s more advanced than all three <em><a href="http://en.wikipedia.org/wiki/Doom_%2528series%2529">DOOM</a></em>s.</p>

<p>I think I&rsquo;m most interested in the literal realization of the procedural generation algorithm.  By shuffling the cards the procedural generation of the dungeon is clear both to designer and player, and this type of randomization has been used for many years in many games with standard and nonstandard sets of cards.  I&rsquo;m interested in seeing how this shuffling mechanic, both literal and metaphorical, can be leveraged to encourage new avenues of play in the future.  I can imagine tuning some aspects of a proc gen algorithm by exposing the contents to the player as a deck of cards, both literally as is typical in CCGs and other tabletop games and as a metaphor for abstraction of systems in a video game.</p>

<h2>Favorite games</h2>

<ul>
<li><a href="http://svblm.itch.io/jet-lag">JET/LAG</a>

<ul>
<li>Bump or get bumped.  Excellent style and great graphics.  Very
juicy!</li>
</ul>
</li>
<li><a href="http://lissar.itch.io/peregrin">Peregrin</a>

<ul>
<li>Beautiful.</li>
</ul>
</li>
<li><a href="http://entropyphi.itch.io/nauticalith">Nauticalith</a>

<ul>
<li>Simple, but really conveys a sense of scale.  Adding some mechanic
like dynamic wind that affects sailing could put this over the
top.</li>
</ul>
</li>
<li><a href="http://tfurmanskigmailcom.itch.io/forska-web-version">Forska</a>

<ul>
<li>Great shader.  Generate some <em><a href="http://wikipedia.com/wiki/Myst">Myst</a></em>-like puzzles and you&rsquo;ve got a game, here.</li>
</ul>
</li>
<li><a href="http://8-bit-ape.itch.io/infinity-explorer">Infinity Explorer</a>

<ul>
<li>Reminds me of <em><a href="http://en.wikipedia.org/wiki/Magic_Carpet_%28video_game%29">Magic Carpet</a></em>.</li>
</ul>
</li>
<li><a href="http://jctwood.itch.io/dungen">DUNGEN star</a>

<ul>
<li>Print and play games are great.</li>
</ul>
</li>
</ul>


<h2>Favorite generators</h2>

<ul>
<li><a href="http://nihilocrat.itch.io/nodemancer">http://nihilocrat.itch.io/nodemancer</a>

<ul>
<li>Interesting.  Will have to look more into it.  Now that I think
about it, this one deserves an honorable mention for favorite tool
of the jam.  I will revisit it in depth in a later post because the
generation algorithm looks like an idea I&rsquo;ve batted around in my
head.</li>
</ul>
</li>
<li><a href="http://diaspora-colonies.herokuapp.com/">http://diaspora-colonies.herokuapp.com/</a>

<ul>
<li>Useful and cool!  Check out <a href="http://ptychomancer.itch.io/diaspora">http://ptychomancer.itch.io/diaspora</a>
for some more background on this space colony generator.</li>
</ul>
</li>
<li><a href="http://eduardo.itch.io/procedural-fabrics">http://eduardo.itch.io/procedural-fabrics</a>

<ul>
<li>Clever tiling textures using diagonal lines that really break up
the patterns to make it more pleasing to the eye.</li>
</ul>
</li>
<li><a href="http://ibol17.itch.io/procedural-pixel-monsters">http://ibol17.itch.io/procedural-pixel-monsters</a>

<ul>
<li>Artistic style.  Simple color palette still allow for a variety of
expressive monsters. Interested in following up on the
procedural tree generationâ€“looks great!</li>
</ul>
</li>
<li><a href="https://github.com/cutgarnetgames/gaia">https://github.com/cutgarnetgames/gaia</a>

<ul>
<li>Beautiful world generator with some source code worth digging
into.</li>
</ul>
</li>
<li><a href="http://gillianms.itch.io/hoopla">http://gillianms.itch.io/hoopla</a>

<ul>
<li>Really think there&rsquo;s something to explore in pixels-as-stitches
graphics.</li>
</ul>
</li>
<li><a href="http://aerique.itch.io/rocks-bitch">http://aerique.itch.io/rocks-bitch</a>

<ul>
<li>The pet rock generator I always wanted!</li>
</ul>
</li>
<li><a href="http://playcrafts.itch.io/palette-generator">http://playcrafts.itch.io/palette-generator</a>

<ul>
<li>Useful.</li>
</ul>
</li>
<li><a href="http://tccoxon.itch.io/dreamer">http://tccoxon.itch.io/dreamer</a>

<ul>
<li>Weird hybrid between an AI and a text adventure, but very
  creative and very cool.</li>
</ul>
</li>
<li><a href="http://itch.io/jam/procjam/rate/14026">http://itch.io/jam/procjam/rate/14026</a>

<ul>
<li>Great concept, but I need remedial lessons or a tutorial.  One to
revisit when I can really dig into it.</li>
</ul>
</li>
</ul>


<h2>Cool looking Windows games I couldn&rsquo;t play</h2>

<ul>
<li><a href="http://crabowitz.itch.io/key-geist">http://crabowitz.itch.io/key-geist</a>

<ul>
<li>Reminds me of <em><a href="http://en.wikipedia.org/wiki/The_Wonderful_101">Wonderful 101</a></em>â€“a game I haven&rsquo;t played, but probably should.  Something about the aesthetic of dozens of little flocking characters appeals to me.</li>
</ul>
</li>
<li><a href="http://caseportman.itch.io/riser">http://caseportman.itch.io/riser</a>

<ul>
<li>Looks like it controls well</li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Patchwerk]]></title>
    <link href="http://zerosalife.github.io/blog/2014/11/15/patchwerk/"/>
    <updated>2014-11-15T07:22:18-06:00</updated>
    <id>http://zerosalife.github.io/blog/2014/11/15/patchwerk</id>
    <content type="html"><![CDATA[<h2>Procjam updates</h2>

<p>I&rsquo;ve spent the week at a couple of major international conferences sponsored to some degree by old dead-tree journals.  I was struck, following last weekends' <a href="https://twitter.com/search?q%3Dprocjam">#procjam</a> <a href="http://www.twitch.tv/procjam">talks</a>, by the lack of openness.  None of these talks are going to be made freely available.  Photography and recording is actively discouraged.  The official conference hashtags, when provided, were silent or only used by those in attendance.  While this exclusivity may generate profits for the aforementioned dead-tree journals and give a leg up to those fortunate enough to be able to attend these conferences, I find it ethically reprehensible in the 21st century, given the tools that we have available.</p>

<p>I&rsquo;d like to once again thank <a href="https://twitter.com/mtrc">@mtrc</a> for hosting <em>and streaming</em> #procjam.  Because conference was made freely available, I was able to interact with the attendees in a way that would be impossible if I was trying to divine through twitter what was going on behind closed doors.  I think this kind of openness can only generate more interest and ideas, regardless of the field of study.</p>

<h2>Patchwerk</h2>

<p>A <a href="https://github.com/quil/quil">Quil</a> sketch designed to generate patterns for quilts.  The code is <a href="https://github.com/zerosalife/patchwerk">available on github</a>.</p>

<p><a href="https://github.com/zerosalife/patchwerk/blob/master/patchwerk-example.png"><img class="center" src="https://raw.githubusercontent.com/zerosalife/patchwerk/master/patchwerk-example.png"></a></p>

<!--more-->


<h2>What is Quil?</h2>

<p>Quil is a port of <a href="http://processing.org">Processing</a> to <a href="http://clojure.org/">Clojure</a>.</p>

<h2>Motivation</h2>

<p>When I came across some interesting pictures of quilts, I was struck by the regularity of the shapes used to construct them.  A quilt is simply a grid of squares containing some pattern of simple shapes.  I thought it would be interesting to have an algorithm generate the grid (what I guess quilters probably call a pattern), so I set out to build some functions in Quil to draw a few simple shapes that I identified in the squares of the quilts and then to randomly draw them in a grid.</p>

<h2>How to model a quilt</h2>

<p>Using the fundamental assumption I already stated: a quilt is just a grid of squares.  My algorithm defines a <code>grid-width</code> and <code>grid-height</code> along with a <code>square-size</code> in pixels that determine the overall size of the quilt pattern to generate.  This allows you to generate an arbitrary number of quilt squares of a certain size.</p>

<p>Each square contains a subgrid with a defined <code>sub-grid-width</code> and <code>sub-grid-height</code>.  In retrospect, it would probably be better to define one parameter because if the dimensions are not square, everything will be screwed up.</p>

<p>I then define several basic drawing functions to fill the squares of the grid.  The procedural generation&rsquo;s <code>draw</code> algorithm knows about each of the drawing functions, called <code>pattern-funcs</code>, and picks one of the <code>patterns</code> to draw each square of the grid.</p>

<h2>The drawing functions</h2>

<p>The primary elements of the quilt squares that I wanted to replicate were large squares, smaller checkers, triangles, and a mixed pattern of small triangles with a square that I called &ldquo;fish&rdquo;.</p>

<p>The squares (see the square second left from the top right) and the smaller checkers (see quilt square fourth down from the top left) use the same drawing function.  However, they differ in that they utilize different helper functions return the correctly sized vertices and support multiple calls for the smaller checkers.</p>

<p>The triangles (see square in the top right) use a lookup table, <code>triangle-lookup-table</code>, to store information about the appropriate &ldquo;legs&rdquo; for a triangle with a point in a given corner.  By using a common syntax for the vertices, the <code>draw-triangle</code> algorithm can share the vertex lookup algorithm with the square routines.</p>

<p>Then the culmination of my dastardly plan involves marrying a square from the smaller checker function with flanking triangles, based on the subgrid this time instead of the larger grid.  The result is a pattern that looks like a fish to me (see quilt square in the top left).  Because I built the abstract drawing functions, I simply have to take care of the four directional possibilities and let the drawing functions more fundamental handle the work.</p>

<h2>Future plans: toward Patchwerk 1.0.0</h2>

<p>The project is in need of a major refactoring session, when I can find the time.  I developed it in a single monolithic Clojure file for ease of testing in the REPL.  It will be easier to maintain and understand if I separate out the distinct functionalities into their own namespaces.  The ones that come to mind are <code>patchwerk.grid</code> to handle the generation of the grid, <code>patchwerk.patterns</code> to manage the drawing functions, and <code>patchwerk.util</code> to house the helper functions.  I&rsquo;d also like to make it clear which functions use the <code>quil.core</code> namespace instead of using <code>:refer :all</code>.</p>

<p>There is also <a href="https://github.com/quil/quil/wiki/Functional-mode-(fun-mode">some interesting new functional middleware for Quil</a>).  It provides a framework for you to separate out the mutable state from your Quil functions so that you avoid side effects and can program pure functions, in Processing&rsquo;s typically imperative syntax.  To get this up and running, I imagine that I will have to represent the pixel grid in the <code>state</code> map.</p>

<p>Eventually, and this is beyond the scope of 1.0.0, I&rsquo;m intrigued by the possibility of <a href="https://github.com/quil/quil/wiki/ClojureScript">porting this code over to Clojurescript</a> and creating a web-based version of the application.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[INSceptahdeckWU]]></title>
    <link href="http://zerosalife.github.io/blog/2014/11/08/insceptahdeckwu/"/>
    <updated>2014-11-08T08:28:39-06:00</updated>
    <id>http://zerosalife.github.io/blog/2014/11/08/insceptahdeckwu</id>
    <content type="html"><![CDATA[<h2>#procjam updates</h2>

<p><a href="https://twitter.com/search?q%3Dprocjam">#procjam</a> is upon us.  The conference is on and popping, streaming at <a href="http://www.twitch.tv/procjam">http://www.twitch.tv/procjam</a>.  I&rsquo;ll try to precede my #procjam posts with a little update on some of the cool things I&rsquo;ve seen that need pointing out during the jam itself.</p>

<p><a href="https://twitter.com/GalaxyKate">@GalaxyKate</a> will be streaming <a href="http://vimeo.com/111272682">some tutorials</a> today, following the conference.</p>

<p><a href="https://twitter.com/SudoRossy">@sudorossy</a> is currently streaming some development and modeling at <a href="http://www.twitch.tv/sudorossy">http://www.twitch.tv/sudorossy</a>.  I imagine that sudorossy will continue this throughout the jam.</p>

<p>The <a href="https://twitter.com/search?q%3D7dfps">#7dfps</a> jam is also going on this week.  So, I&rsquo;ve decided to release my third person procedural tweeter.  Or maybe it&rsquo;s a fourth person tweeter, third person once removed.</p>

<h2>Fourth-person tweets</h2>

<p>I&rsquo;m at it again, <a href="http://zerosalife.github.io/blog/2014/04/19/styx-ebooks/">making a twitter bot</a> like <a href="https://twitter.com/styx_ebooks">@styx_ebooks</a>.  Only this time it&rsquo;s in a completely different language and it&rsquo;s got a completely different corpus.  Corpus is a Latin way of saying text, in case you forgot.</p>

<!--more-->


<h2>Making the tweets</h2>

<p>The basic algorithm works like this.</p>

<p>The bot creates a huge textfile containing lyrics from Wu Tang Clan songs.  I trim away a lot of the information about verses and choruses, but I keep the punctuation because I like the sense of rhythm it creates.</p>

<p>Based on the relationship between the words in this corpus file, the bot builds a <a href="http://en.wikipedia.org/wiki/Markov_chain">markov process</a> to generate the text of the tweets.  To do so, the bot generates a transition matrix using <a href="https://github.com/Janiczek/markov">Janiczek&rsquo;s Clojure markov library</a>.  It then takes random walks through that matrix to produce a string of text with a similar relationship between words to the input lyrics corpus.</p>

<h2>Making it a command line app</h2>

<p>This is the first time I&rsquo;ve tried to make a command line application in Twitter.  Luckily there are some good tools out there.</p>

<p>I wondered how to deal with multiple options and inputs, and the good news is: it&rsquo;s just as easy as you&rsquo;d think.  You simply add conditionals to deal with the possible behaviors of your program.  The magic of <code>parse-opts</code> handles the rest.  Options with long names automatically become keys to the option dictionary, and if you&rsquo;ve marked them as a <code>:flag</code> you can depend on the truth-value to control the flow of your program.</p>

<p>You may think it&rsquo;s odd that I&rsquo;m using options instead of actions as in the <code>cli</code> example, but hey.  It&rsquo;s my program.  Your program can work the way you want it too.  I&rsquo;m going to make sure to document it so you can use the Rebel INS or build a twitter bot based on this code.</p>

<p>To build the app, I use <code>lein bin</code> from the command line.</p>

<p>I&rsquo;m interested in <a href="http://www.rkn.io/2014/02/06/clojure-cookbook-daemons/">daemonizing</a> the application.  That is to say, I&rsquo;m interested in turning it into a persistent process that runs in the background on my computer.  But for now, I&rsquo;ve set up a simple <a href="http://en.wikipedia.org/wiki/Cron">cron</a> script to tweet every few hours.</p>

<h2>Logging</h2>

<p>When I do tweets from the command line there&rsquo;s some dark magic going on that I don&rsquo;t understand.  Anyway it seems to invoke the <code>Log4j</code>, so I <a href="http://www.bahmanm.com/blogs/how-to-add-logging-to-a-clojure-project">set that up according to this blog post</a>.</p>

<h2>Markov chain text generation</h2>

<p>One of the quirks of the markov package I used is that it stops generating &lsquo;random walks&rsquo; when it reaches states that it has not been trained on.  As you can imagine when using imagery-rich, neologism-laden rap music, there are many words that occur once, even in a very large corpus.  Being unique is kind of a goal of the form, a fact reflected in <a href="http://en.wikipedia.org/wiki/Ol%2527_Dirty_Bastard">at least one alias</a>.</p>

<p>In order to make more realistic texts, it&rsquo;s common to increase the order of the transition matrix.  That is to say, to determine the probability for a following word from the prior two or more words.  However, given my idiosyncratic corpus, this leads the &lsquo;random walk&rsquo; algorithm to halt, giving me too few words in my output.</p>

<p>Interestingly, in this case, dialing back the order tends to lead to more rhyming and a few recognizable couplets, which I find kinda nice.</p>

<h2>Setting up the twitter account</h2>

<p>I ran into a problem getting an app set up for the bot&rsquo;s twitter account.  I am merely one person, and thus have need for merely one cell phone.  Since twitter requires a unique mobile number for authenticating apps, I was out of luck.  That is, until I found this <a href="http://dghubble.com/blog/posts/twitter-app-write-access-and-bots/">blog post showing how to use the same app on multiple bot clients</a>.</p>

<p>Faithful readers may remember my wildly popular, and yet still somehow deeply underrated, <a href="http://en.wikipedia.org/wiki/Bangsian_fantasy">Bangsian</a> fantasy bot, <a href="https://twitter.com/styx_ebooks">@styx_ebooks</a>.  Using <code>twurl</code> I was able to grant access to the <a href="https://twitter.com/styx_ebooks">@styx_ebooks</a> app credentials for the new bot.</p>

<h2>Moving on</h2>

<p>You can find the source code over on <a href="http://github.com/zerosalife/insceptahdeckwu">github.</a></p>

<p>Here&rsquo;s one of my favorite tweets so far:</p>

<p><div class='embed tweet'>Tweet could not be processed</div></p>

<p>From here the sky&rsquo;s the limit.  I could try analyzing the generated text to try to build lines or stanzas.  I could try to reorder words to reflect the syntax present from the transcription.  I could try to represent individual emcees with unique corpora.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Make things that make things: #procjam 2014]]></title>
    <link href="http://zerosalife.github.io/blog/2014/11/01/make-things-that-make-things-number-procjam-2014/"/>
    <updated>2014-11-01T12:48:46-05:00</updated>
    <id>http://zerosalife.github.io/blog/2014/11/01/make-things-that-make-things-number-procjam-2014</id>
    <content type="html"><![CDATA[<p>I&rsquo;m thrilled to announce that I&rsquo;m going to participate in the <a href="http://itch.io/jam/procjam">upcoming procedural game jam called #procjam</a>.  #procjam is a global game jam and a live-streamed conference in London focused on making things that make things. You can keep up to date by following the jam tumblr <a href="http://procjam.tumblr.com/">procjam.tumblr.com</a>. There&rsquo;s already a <a href="http://procjam.tumblr.com/post/99689402659/procedural-generation-tutorials-getting-started">handy list of procedural generation tutorials available on the tumblug</a>.</p>

<p>In addition to submitting one or two projects I&rsquo;ve been working on, I&rsquo;d like to cover the content of the talks with perspective and reactions, and to check out the contest entries after it&rsquo;s finished <a href="http://zerosalife.github.io/blog/2014/07/26/space-is-read/">like I did for <em>Space Is Red</em> from #spacecowboyjam</a>.</p>

<p>Needless to say this will be a month-long endeavor, what with my weekly (ish) blogging schedule.  With one or two posts focused on submissions, I think four blog posts may be conservative, so I&rsquo;ll keep writing as long as I&rsquo;m interested.</p>

<p>To make it easier to follow along, I&rsquo;ll tag up all the posts with the procjam category and I&rsquo;ll try to do the same for the tweet announcements, even if it&rsquo;s out of style because the jam was weeks ago.  That&rsquo;s how committed I am to making this happen.</p>

<p>If you get the sense that I&rsquo;m trying to psych myself up for this, I am.</p>

<p>The next couple of months will be very busy in my life.  I&rsquo;ll be traveling and attending conferences, activities that have traditionally consumed my precious blogging time like so many Frito pies.</p>

<p>I may be setting the bar high, but if anything the purpose for aiming high is success.  All too often I hear about jams in the middle when everyone is tweeting out cool prototypes and in the thick of design, or I&rsquo;ll hear about a jam when the contest is long over because someone pointed out that the winning entry was amazing.  Through dumb luck and exquisite taste in following <a href="https://twitter.com/mtrc">@mtrc on twitter</a>, I heard about this gamejam with enough lead time to mark it on my calendar.</p>

<p>Even if I don&rsquo;t produce anything interesting or important, by gum, I&rsquo;m going to participate in and cover this gamejam.  I&rsquo;m not going to let another really cool gamejam slip under the radar.</p>
]]></content>
  </entry>
  
</feed>

<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Octopress | zero's a life]]></title>
  <link href="http://zerosalife.github.io/blog/categories/octopress/atom.xml" rel="self"/>
  <link href="http://zerosalife.github.io/"/>
  <updated>2015-01-10T10:11:23-06:00</updated>
  <id>http://zerosalife.github.io/</id>
  <author>
    <name><![CDATA[zerosalife]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Previewing a post using Octopress]]></title>
    <link href="http://zerosalife.github.io/blog/2015/01/10/previewing-a-post-using-octopress/"/>
    <updated>2015-01-10T10:01:44-06:00</updated>
    <id>http://zerosalife.github.io/blog/2015/01/10/previewing-a-post-using-octopress</id>
    <content type="html"><![CDATA[<p>It&rsquo;s nice to preview some of my more complicated posts before I ship them out to the Internets.  Here&rsquo;s how I do it.</p>

<h2>make preview</h2>

<p>I <a href="http://zerosalife.github.io/blog/2014/09/06/automating-blog-deployment-with-octopress/">previously posted</a> a <code>makefile</code> I use to automate deployment of my blog.  Here are the germane lines for previewing:</p>

<p>``` make
preview:</p>

<pre><code>bundle exec rake generate &amp;&amp; bundle exec rake preview
</code></pre>

<p>```</p>

<p>So typing <code>make preview</code> at the command prompt will run start up <a href="https://github.com/ruby/rake">rake</a>&rsquo;s webserver at <code>http://localhost:4000</code>.  Then all I have to do is launch a browser, connect to that port, and voila: a preview of the blog that regenerates to match the changes I make live, as I make them.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[New Year, New Footer]]></title>
    <link href="http://zerosalife.github.io/blog/2015/01/03/new-year-new-footer/"/>
    <updated>2015-01-03T09:17:24-06:00</updated>
    <id>http://zerosalife.github.io/blog/2015/01/03/new-year-new-footer</id>
    <content type="html"><![CDATA[<p>It&rsquo;s 2015.  Time to update my footer.  I came across a link to a
website called, <a href="http://updateyourfooter.com/">updateyourfooter.com</a>.  It describes ways to
dynamically update footer info in a variety of languages.</p>

<p>I set out to intrepidly implement one of the JavaScript snippets from the website in the <code>source/_includes/custom/footer.html</code> file in my <a href="http://octopress.org/">Octopress</a> install.  But, to my surprise, there was a bit of code in the footer that already dynamically generated the date timestamp for the footer.</p>

<p>The code looks like this:</p>

<p>
<code>{{ site.time | date: "%Y" }}</code>
</p>

<p>Ready for this?  Octopress is a framework built on top of <a href="https://github.com/jekyll/jekyll">Jekyll</a>.  Jekyll uses <a href="http://docs.shopify.com/themes/liquid-documentation/basics">Shopify&rsquo;s Liquid Template Engine</a>.  All of that is a fancy way of saying that this code is compiled into useful stuff for my site.</p>

<p>All I had to do was preface that with the year my blog was established, and badabing, no-mess dynamic footer.  Now the relevant section of the footer looks like this:</p>

<p>
<code>Copyright &amp;copy; 2014 &amp;ndash; {{ site.time | date: "%Y" }}</code>
</p>

<p>You can see the results at the bottom of this page.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Automating blog deployment with Octopress]]></title>
    <link href="http://zerosalife.github.io/blog/2014/09/06/automating-blog-deployment-with-octopress/"/>
    <updated>2014-09-06T11:27:35-05:00</updated>
    <id>http://zerosalife.github.io/blog/2014/09/06/automating-blog-deployment-with-octopress</id>
    <content type="html"><![CDATA[<p>Based on Kevin van Zonneveld&rsquo;s (<a href="https://twitter.com/kvz">@kvz</a>) <a href="http://kvz.io/blog/2012/09/25/blog-with-octopress/">article</a> on setting up Octopress,
I&rsquo;ve adapted a <code>Makefile</code> to make building my blog easier&#x2026; with
<a href="http://www.gnu.org/software/make/">make</a>.  The following <code>Makefile</code> allows me to build and deploy my blog
by typing <code>make blog</code> at the command prompt.</p>

<!--more-->


<pre><code>all: blog

preview:
        bundle exec rake generate &amp;&amp; bundle exec rake preview

blog:
        git pull &amp;&amp; \
        bundle install &amp;&amp; \
        bundle exec rake integrate &amp;&amp; \
        bundle exec rake generate &amp;&amp; \
        bundle exec rake deploy &amp;&amp; \
        git add .; \
        git commit -am "blog update $$(date +%Y-%m-%d)"; \
        git push origin source

.PHONY: blog                   # Force blog to run regardless of the changes to the files.
</code></pre>

<h2>Additional Notes</h2>

<h3>rake build didn&rsquo;t work for me</h3>

<p>I think this is because I haven&rsquo;t written any tasks that use <code>rake
build</code>.</p>

<h3>Remote for the source of my blog</h3>

<p>I push the source code of my blog to a branch named <code>source</code> rather
than <code>master</code>.</p>

<h3>The percent symbol screwed everything up</h3>

<p>Not sure exactly why, but including the <code>%</code> after blog on the line
<code>.PHONY: blog%</code> gave me an error saying <code>make: `blog' is up to date.</code>.
Removing the <code>%</code> allowed me to run <code>make blog</code> as expected.</p>
]]></content>
  </entry>
  
</feed>
